//Ethereal Dagger, MiB
//Normal dagger that compensates for a monster's armor
{
   const BASE_LEVEL_REQ 25

   const MODEL_VIEW        viewmodels/v_smallarms.mdl
   const MODEL_HANDS weapons/p_weapons3.mdl
   const MODEL_WORLD weapons/p_weapons3.mdl
	const MODEL_BODY_OFS 48
	const MODEL_VIEW_IDX 12

  //Used in base_melee
  //------------------
  const MELEE_RANGE  50
  const MELEE_DMG_DELAY  0.2
  const MELEE_ATK_DURATION 0.9
  const MELEE_ENERGY  0.6
  const MELEE_DMG  225
  const MELEE_DMG_RANGE      50
	const MELEE_DMG_TYPE dark //so it can hit ethereals
  const MELEE_ACCURACY  85%
  const MELEE_ALIGN_BASE 3.6,-6
  const MELEE_ALIGN_TIP  0,0 

  const MELEE_SOUND_DELAY      MELEE_DMG_DELAY
  const MELEE_PARRY_CHANCE      5%  //Apparently ethereal daggers have a hard time blocking physical objects. Who knew?

  const PLAYERANIM_AIM  knife
  const PLAYERANIM_SWING swing_knife
  const SOUND_HITWALL1 debris/glass1.wav
  const SOUND_HITWALL2 debris/glass2.wav

  const ANIM_PREFIX  standard
}

#include items/smallarms_base

{  weapon_spawn
	name  an|Ethereal Dagger
	desc  A ghostly dagger
	weight  3
	size  2
	value 3000
	sethudsprite hand 136
	sethudsprite trade 136
}

{ melee_damaged_other

	if !ETHER_ABORT

	if $get(PARAM1,isalive)

	local ENEMY_ARMOR $get(PARAM1,scriptvar,'MSC_ARMOR_ALL')
	local IN_DAMAGE PARAM2

	if ENEMY_ARMOR > 0

	callevent adj_damage ENEMY_ARMOR IN_DAMAGE
}

{ special_02_damaged_other

	if !ETHER_ABORT

	if $get(PARAM1,isalive)

	local ENEMY_ARMOR $get(PARAM1,scriptvar,'MSC_ARMOR_ALL')
	local IN_DAMAGE PARAM2

	if ENEMY_ARMOR > 0

	callevent adj_damage ENEMY_ARMOR IN_DAMAGE
}

{ adj_damage

	local ENEMY_ARMOR PARAM1
	local IN_DAMAGE PARAM2

	if IN_DAMAGE > 0
	if ENEMY_ARMOR < 1
	local MULT_DAMAGE 1
	divide MULT_DAMAGE ENEMY_ARMOR

	dbg adj_damage armr ENEMY_ARMOR dmg IN_DAMAGE

	local OUT_DAMAGE IN_DAMAGE
	multiply OUT_DAMAGE MULT_DAMAGE

	setdmg dmg OUT_DAMAGE
	returndata MULT_DAMAGE
}

//debug
{ ext_ether
	if ( ETHER_ABORT )
	{
		setvard ETHER_ABORT 0
	}
	else
	{
		setvard ETHER_ABORT 1
	}
	dbg ext_ether ETHER_ABORT
}