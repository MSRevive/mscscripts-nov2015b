#scope server
//somewhat dynamic object, fires pre-defined map trigger when broken

{
   const VALID_DAMAGE_TYPES "blunt;fire"
   const OBJECT_NAME a|web
   const MAP_TRIGGER break_web1
   const DAMAGE_THRESHOLD 100 //or whatever your threshold is to be	

   //random sound played on proper damage type
   const SOUND_STRUCK1 debris/flesh1.wav 
   const SOUND_STRUCK2 debris/flesh2.wav
   const SOUND_STRUCK3 debris/flesh3.wav

   //random sound when wrong damage type
   const SOUND_RESIST1 weapons/bullet_hit1.wav
   const SOUND_RESIST2 weapons/bullet_hit2.wav
   const SOUND_RESIST3 weapons/ric1.wav

   //sound play on break
   const SOUND_BREAK debris/bustflesh1.wav

   //for other sounds, see valve/sound in your HLDS folder.
   //most breaking/struck sounds are in sound/debris
   //remember to ommit the sound/ prefix as illustrated above
   //if you have less than three sounds you want to use, just use one repeatedly

   //if you want gibs when the structure breaks, use env_gibs with MAP_TRIGGERs name
}

{ game_spawn
   hp 99999
   name OBJECT_NAME
   setvard PLAYING_DEAD 1 //so mobs dont target it

   //if you need a special render type (eg. additive/{solid), uncomment, and set it here:
   //setprop ent_me rendermode 5 //5=additive, 4=solid, 2=textured
   //setprop ent_me reanderamt 255 //0-255 for level of opaqueness (no effect on solid rendermode)
}

{ game_damaged //PARAM1=attacker PARAM2=dmg PARAM3=dmg_type

   if !AM_BROKE
   //check for valid incoming damage types
   setvard VALID_DAMAGE 0
   setvard INC_DAMAGE_TYPE PARAM3
   calleventloop $get_token_amt(VALID_DAMAGE_TYPES) check_type
   
   if ( !VALID_DAMAGE )
   {
      if game.time > NEXT_IMMUNE_WARN
      setvard NEXT_IMMUNE_WARN game.time
      add NEXT_IMMUNE_WARN 5.0 //so we dont spam the player with this report, due to an invalid DOT or what not.
      dplayermessage PARAM1 The $get(ent_me,name) seems resistant to this weapon.
      playrandomsound 0 10 SOUND_RESIST1 SOUND_RESIST2 SOUND_RESIST3
   }

   if ( VALID_DAMAGE )
   {
      if ( PARAM2 >= DAMAGE_THRESHOLD )
      {
         playsound 0 10 SOUND_BREAK
         usetrigger MAP_TRIGGER
         invincible 1
         setvard AM_BROKE 1
         callevent 0.1 remove_me //adding a delay here in case damage sent to a soon-to-be null entity causes a problem
      }
      else
      {
         playrandomsound 0 10 SOUND_STRUCK1 SOUND_STRUCK2 SOUND_STRUCK3
         dplayermessage PARAM1 The $get(ent_me,name) budges, but it seems it must be struck with more force. ( $int(PARAM2) of DAMAGE_THRESHOLD )
		 //zero out damage and reset health (just in case)
         setdmg dmg 0
         hp 9999
      }
   }
}

{ check_type
   local CUR_TYPE $get_token(VALID_DAMAGE_TYPES,game.script.iteration)
   if INC_DAMAGE_TYPE startswith CUR_TYPE //use use startswith because DOT fire becomes fire_effect, etc.
   setvard VALID_DAMAGE 1
}

{ remove_me
   deleteent ent_me
   removescript
}
