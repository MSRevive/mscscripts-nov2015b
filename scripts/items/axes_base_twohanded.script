{
	const PLAYERANIM_AIM		axe_twohand
  	const PLAYERANIM_SWING		axe_twohand_swing

	const SOUND_HITWALL1 weapons/cbar_hit1.wav
	const SOUND_HITWALL2 weapons/cbar_hit2.wav

	const CUSTOM_REGISTER_CHARGE1 1

	const BWEAPON_DBL_CHARGE_ADJ 3.0

}
#include items/base_melee

{ game_spawn
	sethand both
}

{  special_02_start

	applyeffect ent_owner effects/specialattack_fury
	callevent 0.9 swing_in_air

	if game.serverside
	svplaysound 2 10 $get(ent_owner,scriptvar,'PLR_SOUND_SWORDREADY')

}

{  swing_in_air

	playviewanim	 MELEE_VIEWANIM_ATK
	playowneranim once PLAYERANIM_SWING squatwalk1 3

	if game.serverside
	svplaysound 2 10 $get(ent_owner,scriptvar,'PLR_SOUND_SHOUT1')
}

{  special_02_strike	
	
	
}

{ game_spawn

	

   
   

   local reg.attack.type		strike-land
   local reg.attack.keys		+attack1
   local reg.attack.range		MELEE_RANGE
   local reg.attack.dmg			MELEE_DMG
   local reg.attack.dmg.range		MELEE_DMG_RANGE
   local reg.attack.dmg.type		MELEE_DMG_TYPE
   local reg.attack.energydrain		MELEE_ENERGY
   local reg.attack.stat		MELEE_STAT
   local reg.attack.hitchance		MELEE_ACCURACY
   local reg.attack.priority		0
   local reg.attack.delay.strike	MELEE_DMG_DELAY
   local reg.attack.delay.end		MELEE_ATK_DURATION
   local reg.attack.ofs.startpos	MELEE_STARTPOS
   local reg.attack.ofs.aimang		MELEE_AIMANGLE
   local reg.attack.callback		melee
   local reg.attack.noise		MELEE_NOISE

	local reg.attack.priority	1
	local reg.attack.keys	-attack1
	local reg.attack.callback	special_01
	multiply reg.attack.dmg	BWEAPON_DBL_CHARGE_ADJ
	multiply reg.attack.energydrain BWEAPON_DBL_CHARGE_ADJ
	local reg.attack.chargeamt	100%
	local reg.attack.reqskill	2


	if ( BASE_LEVEL_REQ > reg.attack.reqskill ) add reg.attack.reqskill BASE_LEVEL_REQ

   registerattack

	if !CUSTOM_AXE_SECONDARY

	

   	
   	

	local reg.attack.type		strike-land
	local reg.attack.keys		-attack1
	local reg.attack.range		90
	local reg.attack.dmg		MELEE_DMG
	multiply reg.attack.dmg 	3
	local reg.attack.dmg.range	MELEE_DMG_RANGE
	local reg.attack.dmg.type	MELEE_DMG_TYPE
	local reg.attack.aoe.range	100
	local reg.attack.aoe.falloff	1.5
	local reg.attack.energydrain	MELEE_ENERGY
	multiply reg.attack.energydrain	2
	local reg.attack.stat		MELEE_STAT
	local reg.attack.hitchance	MELEE_ACCURACY
	add reg.attack.hitchance 	10%
	local reg.attack.priority	2
	local reg.attack.delay.strike	1.7
	local reg.attack.delay.end	2.2
	local reg.attack.ofs.startpos	MELEE_STARTPOS
	local reg.attack.ofs.aimang	MELEE_AIMANGLE
	local reg.attack.callback	special_02
	local reg.attack.noise		1000
  	local reg.attack.chargeamt	200%
  	local reg.attack.reqskill	4

	if ( BASE_LEVEL_REQ > reg.attack.reqskill ) add reg.attack.reqskill BASE_LEVEL_REQ
	
	registerattack
}
