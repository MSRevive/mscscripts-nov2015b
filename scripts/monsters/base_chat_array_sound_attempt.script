














#scope server
{
	const CHAT_CONV_ANIMS "converse2;converse1;talkleft;talkright;lean;pondering;pondering2;pondering3;"
}

{
	setvar HAS_BASE_CHAT_ARRAY_INCLUDE 1

	const CHAT_NEVER_INTERRUPT 0 
	const CHAT_USE_BUSY_MESSAGE 1 
	const CHAT_USE_CONV_ANIMS 1 
	const CHAT_MOVE_MOUTH 1 
	const CHAT_NO_CLOSE_MOUTH 0 
	const CHAT_AUTO_FACE 1 
	const CHAT_FACE_ON_USE 1 
	const CHAT_MENU_ENABLE 1 
	const CHAT_RESET_ON_NEW 0 
	setvard CHAT_IGNORE_WHILE_BUSY 0	
	const CHAT_PLAYANIM_STYLE critical 

	setvard CHAT_MENU_ON 1 
	const CHAT_AUTO_HAIL 0 
	const CHAT_AUTO_JOB 0 
	const CHAT_AUTO_RUMOR 0 

	const CHAT_MAX_LINE_LEN 192 

	const CHAT_DELAY 4.0 

	setvard CHAT_CURRENT_SPEAKER none 
}

{ game_spawn
	menu.autoopen CHAT_MENU_ENABLE

	if ( CHAT_AUTO_HAIL ) catchspeech say_hi hail hi j0 yo waddup wassup gweets greet
	if ( CHAT_AUTO_JOB ) catchspeech say_job job work
	if ( CHAT_AUTO_RUMOR ) catchspeech say_rumor rumour rumor

	array.create CONVO_QUE_LINES
	array.create CONVO_QUE_DELAYS
	array.create CONVO_QUE_ANIMS
	array.create CONVO_QUE_EVENTS
	array.create CONVO_QUE_SOUNDS
}

{ game_menu_getoptions

	
	setvard CHAT_CURRENT_SPEAKER PARAM1
	setvard CHAT_LAST_USED_MENU PARAM1

	if ( CHAT_FACE_ON_USE ) setmovedest PARAM1 9999

	if CHAT_MENU_ON

	

	if ( CHAT_AUTO_HAIL )
	{
		local reg.mitem.title 	"Hail"
		local reg.mitem.type 	callback
		local reg.mitem.callback say_hi
		menuitem.register
	}

	if ( CHAT_AUTO_JOB )
	{
		local reg.mitem.title 	"Ask about Jobs"
		local reg.mitem.type 	callback
		local reg.mitem.callback say_job
		menuitem.register
	}

	if ( CHAT_AUTO_RUMOR )
	{
		local reg.mitem.title 	"Ask about Rumors"
		local reg.mitem.type 	callback
		local reg.mitem.callback say_rumor
		menuitem.register
	}
}

{ chat_add_text 

	
	
	local CONVO_NAME PARAM1

	local CONVO_DELAYS CONVO_NAME
	stradd CONVO_DELAYS "_DELAYS"

	local CONVO_ANIMS CONVO_NAME
	stradd CONVO_ANIMS "_ANIMS"

	local CONVO_EVENTS CONVO_NAME
	stradd CONVO_EVENTS "_EVENTS"

	local CONV_ARRAY_EXISTS $get_array(PARAM1,0)

	if ( CONV_ARRAY_EXISTS contains '[ERROR_NO_ARRAY]' )
	{
	
		array.create CONVO_NAME
		array.create CONVO_DELAYS
		array.create CONVO_ANIMS
		array.create CONVO_EVENTS
		array.create CONVO_SOUNDS
	}

	local L_CHAT_TEXT PARAM2

	local L_CHAT_DELAY PARAM3
	if ( L_CHAT_DELAY startswith 'PARAM' ) local L_CHAT_DELAY CHAT_DELAY

	local L_CHAT_ANIM PARAM4
	if ( L_CHAT_ANIM startswith 'PARAM' ) local L_CHAT_ANIM 'none'

	local L_CHAT_EVENT PARAM5
	if ( L_CHAT_EVENT startswith 'PARAM' ) local L_CHAT_EVENT 'none'

	local L_CHAT_SOUND none
	if ( PARAM3 startswith 'sound:' ) local L_CHAT_SOUND PARAM3
	if ( PARAM4 startswith 'sound:' ) local L_CHAT_SOUND PARAM4
	if ( PARAM5 startswith 'sound:' ) local L_CHAT_SOUND PARAM5
	if ( PARAM6 startswith 'sound:' ) local L_CHAT_SOUND PARAM6
	if ( PARAM7 startswith 'sound:' ) local L_CHAT_SOUND PARAM7
	if ( PARAM8 startswith 'sound:' ) local L_CHAT_SOUND PARAM8
	if ( L_CHAT_SOUND isnot none )
	{
		local L_SOUND_LENGTH $len(L_CHAT_SOUND)
		subtract L_SOUND_LENGTH 6
		local L_CHAT_SOUND $right(L_CHAT_SOUND,L_SOUND_LENGTH)
	
	}

	array.add CONVO_NAME L_CHAT_TEXT
	array.add CONVO_DELAYS L_CHAT_DELAY
	array.add CONVO_ANIMS L_CHAT_ANIM
	array.add CONVO_EVENTS L_CHAT_EVENT
	array.add CONVO_SOUNDS L_CHAT_SOUND

	
	local ARRAY_IDX $get_array_amt(CONVO_NAME)
	subtract ARRAY_IDX 1
	local DBG_TXT $get_array(CONVO_NAME,ARRAY_IDX)

}

{ chat_start_sequence 



	if ( PARAM2 equals clear_que ) local CLEAR_QUE 1
	if ( PARAM3 equals clear_que ) local CLEAR_QUE 1
	if ( PARAM4 equals clear_que ) local CLEAR_QUE 1

	if ( PARAM2 equals add_to_que ) local ADD_TO_QUE 1
	if ( PARAM3 equals add_to_que ) local ADD_TO_QUE 1
	if ( PARAM4 equals add_to_que ) local ADD_TO_QUE 1

	if ( CLEAR_QUE ) dbg clear_que set


	if ( CHAT_RESET_ON_NEW ) local CLEAR_QUE 1

	if ( CHAT_AUTO_FACE )
	{
		if !CHAT_TEMP_NO_AUTO_FACE
		callevent chat_face_speaker
	}

	setvard CHAT_ABORT 0 
	local CONVO_NAME PARAM1
	local CONV_ARRAY_EXISTS $get_array(PARAM1,0)
	if ( CONV_ARRAY_EXISTS contains '[ERROR_NO_ARRAY]' )
	{
		saytext [ERROR] conversation CONVO_NAME does not exist!
		local EXIT_SUB 1
	}
	if !EXIT_SUB

	if ( !ADD_TO_QUE )
	{
		if CHAT_BUSY
		if ( CLEAR_QUE )
		{
			callevent npc_chat_was_busy started_new
		}
		if !CLEAR_QUE
		if ( CHAT_IGNORE_WHILE_BUSY )
		{
		
			callevent npc_chat_was_busy ignored
			local EXIT_SUB 1
		}
		else
		{
			callevent npc_chat_was_busy added
		}
	}
	if !EXIT_SUB

	if ( CLEAR_QUE ) callevent chat_clear_que chat_start_sequence

	if ( PARAM2 equals prioritize ) setvard CHAT_IGNORE_WHILE_BUSY 1
	if ( PARAM3 equals prioritize ) setvard CHAT_IGNORE_WHILE_BUSY 1
	if ( PARAM4 equals prioritize ) setvard CHAT_IGNORE_WHILE_BUSY 1
	if ( CHAT_NEVER_INTERRUPT ) setvard CHAT_IGNORE_WHILE_BUSY 1

	setvard CHAT_SEQUENCE CONVO_NAME
	setvard CHAT_LINES_ANAME CONVO_NAME
	setvard CHAT_DELAYS_ANAME CONVO_NAME
	stradd CHAT_DELAYS_ANAME "_DELAYS"
	setvard CHAT_ANIMS_ANAME CONVO_NAME
	stradd CHAT_ANIMS_ANAME "_ANIMS"
	setvard CHAT_EVENTS_ANAME CONVO_NAME
	stradd CHAT_EVENTS_ANAME "_EVENTS"
	setvard CHAT_SOUNDS_ANAME CONVO_NAME
	stradd CHAT_SOUNDS_ANAME "_SOUNDS"


	calleventloop $get_array_amt(CHAT_LINES_ANAME) chat_add_to_que

	if ( !CHAT_QUE_ACTIVE )
	{
		setvard CHAT_QUE_ACTIVE 1
		callevent chat_cycle_que
	}
}


{ chat_convo_anim
	local N_ANIMS $get_token_amt(CHAT_CONV_ANIMS)
	subtract N_ANIMS 1
	local RND_ANIM $rand(0,N_ANIMS)
	playanim CHAT_PLAYANIM_STYLE $get_token(CHAT_CONV_ANIMS,RND_ANIM)
}

{ chat_move_mouth 
	if ( PARAM1 startswith 'PARAM' )
	{
		local DO_NADDA 1
	}
	else
	{
		setvard CHAT_END_MOVE_MOUTH game.time
		add CHAT_END_MOVE_MOUTH PARAM1
		subtract CHAT_END_MOVE_MOUTH 1.0 
	
	}

	if ( game.time < CHAT_END_MOVE_MOUTH )
	{
		local RND_SAY "["
		local M_TIME $randf(0.1,0.3)
		stradd RND_SAY M_TIME
		stradd RND_SAY "]"
		say RND_SAY

		add M_TIME 0.1
		callevent M_TIME chat_close_mouth
		add M_TIME 0.1
		callevent M_TIME chat_move_mouth
	}
}

{ chat_close_mouth
	if !CHAT_NO_CLOSE_MOUTH 
	setprop ent_me controller1 0
}

{ chat_open_mouth 
	setprop ent_me controller1 -1
}

{ chat_face_speaker
	if ( PARAM1 isnot 'PARAM1' )
	{
		setvard CHAT_CURRENT_SPEAKER PARAM1
	}
	else
	{
		callevent chat_find_speaker_id
	}
	setmovedest CHAT_CURRENT_SPEAKER 9999
}

{ chat_find_speaker_id
	local L_LAST_SPOKE $get(ent_lastspoke,id)
	if ( $get(L_LAST_SPOKE,isalive) )
	{
		if $get(L_LAST_SPOKE,range) < 512
		setvard CHAT_CURRENT_SPEAKER L_LAST_SPOKE
	}
	if ( $get(CHAT_LAST_USED_MENU,isalive) )
	{
		if $get(CHAT_LAST_USED_MENU,range) < 512
		setvard CHAT_CURRENT_SPEAKER CHAT_LAST_USED_MENU
	}
	if ( !$get(CHAT_CURRENT_SPEAKER,isalive) )
	{
	
		setvard CHAT_CURRENT_SPEAKER $get_insphere(player,512)
	}
	if ( !$get(CHAT_CURRENT_SPEAKER,isalive) )
	{
		
		getplayersnb PLAYER_LIST
		setvard CHAT_CURRENT_SPEAKER $get_token(PLAYER_LIST,0)
	}
}

{ chat_now 

	if ( PARAM2 equals clear_que ) local CLEAR_QUE 1
	if ( PARAM3 equals clear_que ) local CLEAR_QUE 1
	if ( PARAM4 equals clear_que ) local CLEAR_QUE 1
	if ( CHAT_RESET_ON_NEW ) local CLEAR_QUE 1

	if ( PARAM2 equals 'add_to_que' ) local ADD_TO_QUE 1
	if ( PARAM3 equals 'add_to_que' ) local ADD_TO_QUE 1
	if ( PARAM4 equals 'add_to_que' ) local ADD_TO_QUE 1

	if ( PARAM2 equals 'add_to_que' ) local PARAM2 'PARAM'
	if ( PARAM3 equals 'add_to_que' ) local PARAM3 'PARAM'
	if ( PARAM4 equals 'add_to_que' ) local PARAM4 'PARAM'
	if ( PARAM2 equals 'clear_que' ) local PARAM2 'PARAM'
	if ( PARAM3 equals 'clear_que' ) local PARAM3 'PARAM'
	if ( PARAM4 equals 'clear_que' ) local PARAM4 'PARAM'

	local L_CHAT_SOUND none
	if ( PARAM3 startswith 'sound:' ) local L_CHAT_SOUND PARAM3
	if ( PARAM4 startswith 'sound:' ) local L_CHAT_SOUND PARAM4
	if ( PARAM5 startswith 'sound:' ) local L_CHAT_SOUND PARAM5
	if ( PARAM6 startswith 'sound:' ) local L_CHAT_SOUND PARAM6
	if ( PARAM7 startswith 'sound:' ) local L_CHAT_SOUND PARAM7
	if ( PARAM8 startswith 'sound:' ) local L_CHAT_SOUND PARAM8
	if ( L_CHAT_SOUND isnot none )
	{
		local L_SOUND_LENGTH $len(L_CHAT_SOUND)
		subtract L_SOUND_LENGTH 6
		local L_CHAT_SOUND $mid(L_CHAT_SOUND,6,L_SOUND_LENGTH)
	
	}

	if ( CHAT_AUTO_FACE )
	{
		if !CHAT_TEMP_NO_AUTO_FACE
		callevent chat_face_speaker
	}

	if ( !ADD_TO_QUE )
	{
		if CHAT_BUSY
		if ( CLEAR_QUE )
		{
			callevent npc_chat_was_busy started_new
		}
		if !CLEAR_QUE
		if ( CHAT_IGNORE_WHILE_BUSY )
		{
		
			callevent npc_chat_was_busy ignored
			local EXIT_SUB 1
		}
		else
		{
			callevent npc_chat_was_busy added
		}
	}
	if !EXIT_SUB

	if ( CLEAR_QUE ) callevent chat_clear_que chat_now

	local L_CHAT_TEXT PARAM1

	local L_CHAT_DELAY PARAM2
	if ( L_CHAT_DELAY startswith 'PARAM' ) local L_CHAT_DELAY CHAT_DELAY

	local L_CHAT_ANIM PARAM3
	if ( L_CHAT_ANIM startswith 'PARAM' ) local L_CHAT_ANIM 'none'

	local L_CHAT_EVENT PARAM4
	if ( L_CHAT_EVENT startswith 'PARAM' ) local L_CHAT_EVENT 'none'

	array.add CONVO_QUE_LINES L_CHAT_TEXT
	array.add CONVO_QUE_DELAYS L_CHAT_DELAY
	array.add CONVO_QUE_ANIMS L_CHAT_ANIM
	array.add CONVO_QUE_EVENTS L_CHAT_EVENT
	array.add CONVO_QUE_SOUNDS L_CHAT_SOUND

	if ( !CHAT_QUE_ACTIVE )
	{
		setvard CHAT_QUE_ACTIVE 1
		callevent chat_cycle_que
	}
}

{ chat_pause
	setvard CHAT_QUE_ACTIVE 0
}

{ chat_resume
	if ( !CHAT_QUE_ACTIVE )
	{
		setvard CHAT_QUE_ACTIVE 1
		callevent chat_cycle_que
	}
}

{ game_death
	if CHAT_BUSY
	callevent chat_pause
}

{ ext_dump_chat 
	setvard DUMP_CONVO PARAM1
	calleventloop $get_array_amt(DUMP_CONVO) dump_chat
}

{ dump_chat
	local CUR_IDX game.script.iteration
	local CUR_LINES_ANAME DUMP_CONVO
	local CUR_DELAYS DUMP_CONVO
	stradd CUR_DELAYS _DELAYS
	local CUR_ANIMS DUMP_CONVO
	stradd CUR_ANIMS '_ANIMS'
	local CUR_EVENTS DUMP_CONVO
	stradd CUR_EVENTS '_EVENTS'
	local CUR_SOUNDS DUMP_CONVO
	stradd CUR_SOUNDS '_SOUNDS'


	local CUR_TEXT $get_array(CUR_LINES_ANAME,CUR_IDX)
	local CUR_DELAY $get_array(CUR_DELAYS,CUR_IDX)
	local CUR_ANIM $get_array(CUR_ANIMS,CUR_IDX)
	local CUR_EVENT $get_array(CUR_EVENTS,CUR_IDX)
	local CUR_SOUNDS $get_array(CUR_SOUNDS,CUR_IDX)


}

{ chat_add_to_que
	local CUR_IDX game.script.iteration

	local CUR_LINE $get_array(CHAT_LINES_ANAME,CUR_IDX)
	local CUR_DELAY $get_array(CHAT_DELAYS_ANAME,CUR_IDX)
	local CUR_ANIM $get_array(CHAT_ANIMS_ANAME,CUR_IDX)
	local CUR_EVENT $get_array(CHAT_EVENTS_ANAME,CUR_IDX)
	local CUR_SOUND $get_array(CHAT_SOUNDS_ANAME,CUR_IDX)



	array.add CONVO_QUE_LINES CUR_LINE
	array.add CONVO_QUE_DELAYS CUR_DELAY
	array.add CONVO_QUE_ANIMS CUR_ANIM
	array.add CONVO_QUE_EVENTS CUR_EVENT
	array.add CONVO_QUE_EVENTS CUR_SOUND
}

{ chat_clear_que 

	
	
	setvard CHAT_SPOOL_OUT_ALL_COUNT $get_array_amt(CONVO_QUE_LINES)
	callevent chat_clear_que_loop 
}

{ chat_clear_que_loop
	setvard CHAT_SPOOL_OUT_COUNT 0
	callevent spool_out_line
	subtract CHAT_SPOOL_OUT_ALL_COUNT 1
	if CHAT_SPOOL_OUT_ALL_COUNT > 0
	callevent 0.26 chat_clear_que_loop
}

{ chat_cycle_que

	if CHAT_QUE_ACTIVE
	
	if ( $get_array_amt(CONVO_QUE_LINES) == 0 )
	{
		
		setvard CHAT_BUSY 0
		setvard CHAT_QUE_ACTIVE 0
		setvard CHAT_IGNORE_WHILE_BUSY 0
		local EXIT_SUB 1
	}
	else
	{
		local CUR_DELAY $get_array(CONVO_QUE_DELAYS,0)
		setvard CHAT_END_TIME game.time
		add CHAT_END_TIME CUR_DELAY
		local L_CHAT_END_PLUS CUR_DELAY
		add L_CHAT_END_PLUS 0.1
		if ( L_CHAT_END_PLUS < 1 ) local L_CHAT_END_PLUS 1.0 
		callevent L_CHAT_END_PLUS chat_cycle_que
	}
	if !EXIT_SUB

	
	if game.time > CHAT_END_TIME



	local CUR_LINE $get_array(CONVO_QUE_LINES,0)
	local CUR_LEN $len(CUR_LINE)
	add CUR_LEN $len(game.monster.name)
	add CUR_LEN 6 

	if ( CUR_LEN < CHAT_MAX_LINE_LEN )
	{
		saytext CUR_LINE
	}
	else
	{
		saytext [ERROR: LINE TOO LONG!] [ CHAT_LINES_ANAME $int(CUR_LEN) / $int(CHAT_MAX_LINE_LEN) ]
	}


	setvard CHAT_BUSY 1

	local CUR_ANIM $get_array(CONVO_QUE_ANIMS,0)
	if ( CUR_ANIM isnot none )
	{
		playanim CHAT_PLAYANIM_STYLE CUR_ANIM
	}
	else
	{
		if CHAT_USE_CONV_ANIMS
		callevent chat_convo_anim
	}

	local CUR_SOUND $get_array(CONVO_QUE_SOUNDS,0)
	if ( CUR_SOUND isnot none )
	{
		playsound 2 10 CUR_SOUND
	}

	local CUR_EVENT $get_array(CONVO_QUE_EVENTS,0)
	if ( CUR_EVENT isnot none )
	{
	
		if ( CUR_EVENT startswith '!' )
		{
			
			local LEN_CUR_EVENT $len(CUR_EVENT)
			subtract LEN_CUR_EVENT 1
			local CUR_EVENT $right(CUR_EVENT,LEN_CUR_EVENT)
			callevent CUR_EVENT
		}
		else
		{
			callevent CUR_DELAY CUR_EVENT
		}
	}

	if ( CHAT_MOVE_MOUTH ) callevent chat_move_mouth CUR_DELAY

	
	setvard CHAT_SPOOL_OUT_COUNT 0
	callevent spool_out_line
}

{ spool_out_line
	add CHAT_SPOOL_OUT_COUNT 1
	if ( CHAT_SPOOL_OUT_COUNT == 1 ) array.del CONVO_QUE_LINES 0
	if ( CHAT_SPOOL_OUT_COUNT == 2 ) array.del CONVO_QUE_DELAYS 0
	if ( CHAT_SPOOL_OUT_COUNT == 3 ) array.del CONVO_QUE_ANIMS 0
	if ( CHAT_SPOOL_OUT_COUNT == 4 ) array.del CONVO_QUE_ANIMS 0
	if ( CHAT_SPOOL_OUT_COUNT == 5 ) array.del CONVO_QUE_SOUNDS 0
	if CHAT_SPOOL_OUT_COUNT < 5
	callevent 0.05 spool_out_line
}


{ npc_chat_was_busy

	if CHAT_USE_BUSY_MESSAGE
	if PARAM1 equals ignored
	callevent chat_busy_message
}

{ chat_busy_message
	if ( !$get(CHAT_CURRENT_SPEAKER,isalive) ) callevent chat_find_speaker_id
	dplayermessage CHAT_CURRENT_SPEAKER "It would be polite to wait until" $get(ent_me,name) "has finished speaking."
}
