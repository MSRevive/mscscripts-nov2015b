{  [shared]
	if ( NO_SNOW == 1 ) deleteme

	const WEATHER_SPRITE snow1.spr
	const SPRITE_BREATH char_breath.spr
	const SOUND_AMB amb/wind.wav
	const SML_RADIUS_FREQ 1
	const MED_RADIUS_FREQ 1
	const LGE_RADIUS_FREQ 1
	setvarg IS_SNOWING 1
}
{  [server]
   	precache WEATHER_SPRITE
   	precache SPRITE_BREATH
}

#include weather/sfx_weather_base


{ [client] weather_start

	setcallback render enable
	if WEATHER_TYPE equals snow

   	callevent rain_loopsound
}

{ [client] rain_loopsound

	if WEATHER_TYPE equals snow

	repeatdelay 7
   	playsound WEATHER_CHANNEL const.snd.maxvol SOUND_AMB
}

{  [client] create_particle

	if WEATHER_TYPE equals snow

   	cleffect tempent sprite WEATHER_SPRITE PARAM1 setup_snowflake
}

{  [client] setup_snowflake

   	cleffect tempent set_current_prop death_delay 	10
   	cleffect tempent set_current_prop bouncefactor 	0
   	cleffect tempent set_current_prop scale 	$randf(0.2,0.3)
   	cleffect tempent set_current_prop velocity.z	-100
   	cleffect tempent set_current_prop gravity 	$randf(0.1,0.3)
   	cleffect tempent set_current_prop collide 	all;die
}



{ [client] weather_setenv

	if WEATHER_TYPE equals snow

	setenv fog.enabled	1
	setenv fog.density	0.4
	setenv fog.start	64
	setenv fog.end		2048
	setenv fog.type		linear
	setenv fog.color	(1,1,1)
}



{  [client] game_render	

	if WEATHER_TYPE equals snow

	if $getcl(PARAM1,isplayer)
	
	if !$rand(0,60)

	local l.pos $getcl(PARAM1,origin)
	vectoradd l.pos $relpos($getcl(PARAM1,angles),$vec(0,8,32))
	
	cleffect tempent sprite SPRITE_BREATH l.pos setup_sprite_breath	
}

{  [client] setup_sprite_breath

	cleffect tempent set_current_prop death_delay 	last_frame
	cleffect tempent set_current_prop framerate	30
	cleffect tempent set_current_prop frames	30
	cleffect tempent set_current_prop scale 	0.1
	cleffect tempent set_current_prop gravity 	-0.01
	cleffect tempent set_current_prop collide 	none
	cleffect tempent set_current_prop rendermode 	add
	cleffect tempent set_current_prop renderamt 	30
}
