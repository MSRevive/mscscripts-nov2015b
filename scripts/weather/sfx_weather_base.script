//Common weather
//

//Server-side
//-----------
{ [shared]
	setvard game.effect.id weather_effect
}


{ [server] game_activate	//1: Start delay

	local FADE_IN PARAM1
	local WEATHER_TYPE PARAM2

	////dbg weather_base got WEATHER_TYPE ( PARAM1 ) ( GLOBAL_WEATHER )

	clientevent persist all GLOBAL_WEATHER FADE_IN WEATHER_TYPE
    	setvarg G_WEATHER_SCRIPT_ID game.script.last_sent_id
}

{ [server] worldevent_weather_die //1: Stop delay

	clientevent update all G_WEATHER_SCRIPT_ID weather_die PARAM1
	callevent PARAM1 effect_die
}

{ [server] effect_die //Weather fully stopped. Delete here
	dbg sv_weather effect_die
	removescript
}

//Client-side
//-----------
#scope client

{
	const WEATHER_CHANNEL const.snd.stream
}

{  [client]
   const WIDTH 4500
   setvard local.smlradius WIDTH
   divide local.smlradius 3
   setvard local.medradius WIDTH
   divide local.medradius 2.5
   setvard local.largeradius WIDTH
   const WEATHER_UPDATE_RATE 1
   setvard local.dead 0
}

{  [client] client_activate	//Start the storm.  [PARAM1] is time until full force [PARA2] weather name

	setvard WEATHER_TYPE PARAM2

	setvard local.active 1	
	setvard local.particle_chance 0
	setvard local.starttime 	game.time
	setvard local.winduptime 	PARAM1

	local l.dirx $randf(-1,1)
	local l.diry $randf(-1,1)
	local l.dirz $randf(-1,0)

	setvard weather.wind.dir $dir($vec(0,0,0),$vec(l.dirx,l.diry,l.dirz))

	callevent weather_start
	callevent weather_base_fade
}

{  [client] weather_die		//Stop the storm. [PARAM1] is time until no more effect
   
   setvard local.active 	0
   setvard local.starttime 	game.time
   setvard local.winduptime 	PARAM1	  //actually the wind *down* time
	setenv fog.enabled	0

   if( local.winduptime ) callevent weather_base_fade
   callevent local.winduptime weather_dead
}

{  [client] weather_base_fade  	//Slowly fade the snow in or out
  
  
   setvard local.amt game.time		//Weather amt [0-1]
   decvar local.amt local.starttime
   capvar local.amt 0 local.winduptime
   divide local.amt local.winduptime

   if( local.amt < 1 ) callevent WEATHER_UPDATE_RATE weather_base_fade

   if( !local.active )
   {
   	local L_WEATHER_AMT_OLD local.amt	//Invert weather amt, if winding down [1-0]
	setvard local.amt 1
	decvar local.amt L_WEATHER_AMT_OLD
   }
   
   setvard local.particle_chance local.amt	//Particle chance [0-100]
   multiply local.particle_chance 100

   callevent weather_fade
}

{  [client] weather_dead  	//Dead, remove effect

	setvard local.dead 1
	callevent baseweather_setenv 0
	removescript
}

{  [client] base_particle_think				//Override this if you don't need it
   repeatdelay $randf(0.05,0.2) //JAN2010 - was $randf(0.0,0.01) :|
 
   callevent base_create_particles local.smlradius SML_RADIUS_FREQ	//Create particles in each radius
   callevent base_create_particles local.medradius MED_RADIUS_FREQ	//Small, medium, large
   callevent base_create_particles local.largeradius LGE_RADIUS_FREQ		
}

{  [client] base_create_particles			//Override this if you don't need it

	//setvard WEATHER_PARTICLES_RADIUS PARAM1
	
	calleventloop PARAM2 base_create_particle_loop PARAM1
}

{  [client] base_create_particle_loop //1: Radius

	if $rand(0,99) < local.particle_chance

	local l.radius PARAM1
   	local l.radiusneg $neg(l.radius)
	local x $rand(l.radiusneg,l.radius)
	local y $rand(l.radiusneg,l.radius)
 
	local l.pos $relpos(x,y,28)

   	local l.skyheight $get_sky_height(l.pos)
   	if l.skyheight isnot 'none'

	vectorset l.pos z l.skyheight
	callevent create_particle l.pos
}

{ [client] environment_change //Called from player_cl_effects_world. PARAM1: new environment state

	if !local.dead

	callevent baseweather_setenv 1
}

{ [client] client_activate

	callevent baseweather_setenv 1
}

{ [client] baseweather_setenv //PARAM1: 1/0 (on/off)

	if( PARAM1 ) callevent weather_setenv
	else callexternal all environment_change clglobal.daystate //reset normal fog
}

{ [client] weather_setenv

	//fogs set through here to prevent older clients from crashing when we add new fogs
	////dbg setenv got WEATHER_TYPE


	local FOG_COLOR (1,1,1)
	local FOG_DENSITY 1.4
	local FOG_START 32
	local FOG_END 2048
	if ( WEATHER_TYPE equals fog_white )
	{
		setenv fog.enabled	1
		setenv fog.color	FOG_COLOR
		setenv fog.density	FOG_DENSITY
		setenv fog.start	FOG_START
		setenv fog.end		FOG_END
		setenv fog.type		linear
	}
	if ( WEATHER_TYPE equals fog_thick )
	{
		local FOG_DENSITY 5.4
		local FOG_START 50
		local FOG_END 500
		local FOG_COLOR (0.9,0.9,0.9)
		setenv fog.enabled	1
		setenv fog.color	FOG_COLOR
		setenv fog.density	FOG_DENSITY
		setenv fog.start	FOG_START
		setenv fog.end		FOG_END
		setenv fog.type		linear
	}
	if ( WEATHER_TYPE equals fog_green )
	{
		local FOG_COLOR (0,1,0)
		setenv fog.enabled	1
		setenv fog.color	FOG_COLOR
		setenv fog.density	FOG_DENSITY
		setenv fog.start	FOG_START
		setenv fog.end		FOG_END
		setenv fog.type		linear
	}
	if ( WEATHER_TYPE equals fog_red )
	{
		local FOG_COLOR (1,0,0)
		setenv fog.enabled	1
		setenv fog.color	FOG_COLOR
		setenv fog.density	FOG_DENSITY
		setenv fog.start	FOG_START
		setenv fog.end		FOG_END
		setenv fog.type		linear
	}
	if ( WEATHER_TYPE equals fog_blue )
	{
		local FOG_COLOR (0.8,0.8,1.0)
		setenv fog.enabled	1
		setenv fog.color	FOG_COLOR
		setenv fog.density	FOG_DENSITY
		setenv fog.start	FOG_START
		setenv fog.end		FOG_END
		setenv fog.type		linear
	}
	if ( WEATHER_TYPE equals fog_brown )
	{
		local FOG_COLOR (0.4,0.5,0.2)
		local FOG_DENSITY 5.4
		local FOG_START 50
		local FOG_END 500
		setenv fog.enabled	1
		setenv fog.color	FOG_COLOR
		setenv fog.density	FOG_DENSITY
		setenv fog.start	FOG_START
		setenv fog.end		FOG_END
		setenv fog.type		linear
	}
	if ( WEATHER_TYPE equals fog_black )
	{
		local FOG_COLOR (0.4,0.5,0.2)
		local FOG_DENSITY 5.4
		local FOG_START 50
		local FOG_END 500
		setenv fog.enabled	1
		setenv fog.color	(0.0,0,0.0,0.599)
		setenv fog.density	1.5
		setenv fog.start	FOG_START
		setenv fog.end		FOG_END
		setenv fog.type		linear
	}

}