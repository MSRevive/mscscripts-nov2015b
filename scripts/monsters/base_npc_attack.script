#scope server

{
	setvar HAS_AI 1

	setvard CYCLE_TIME_IDLE 2.8
	

	setvard CYCLE_TIME_BATTLE 0.1
	

	setvard CYCLE_TIME CYCLE_TIME_IDLE
	

	setvard MONSTER_ID $rand(1000,9999) 
	

	
	
	
	
	
	

	
	
	
	
	
}

#include [server] monsters/base_npc 

{
   eventname game_spawn

	

	callevent $randf(0.5,1.0) npcatk_get_postspawn_properties
	
}

{ npcatk_get_postspawn_properties

	callevent npcatk_check_sets

	setvard ORIG_HUNT_AGRO HUNT_AGRO
	setvard IS_FLEEING 0
	setvard HUNT_LASTTARGET ¯NONE¯
	setvard NPCATK_TARGET unset

	


	
	setvard NPC_INITIALIZED 1
}


{ hunting_mode_go
repeatdelay CYCLE_TIME

	callevent npcatk_hunt

	

	
	
	if NPC_INITIALIZED

   if CAN_HUNT
	if !SUSPEND_AI
   if !IS_FLEEING
	if !PLAYING_DEAD

	setvard NPCATK_TARGET HUNT_LASTTARGET

	if ( HUNT_LASTTARGET isnot ¯NONE¯ )
	{
		
		if ( $get(HUNT_LASTTARGET,range) > CHASE_RANGE ) 
		{
			
			setmoveanim ANIM_WALK
			callevent npcatk_clear_targets "targ_out_of_range"
		}

		if ( !$get(HUNT_LASTTARGET,isalive) ) local TARG_DIED 1
		if ( !$get(HUNT_LASTTARGET,exists) ) local TARG_DIED 1

		if ( TARG_DIED )
		{	
			
			callevent my_target_died HUNT_LASTTARGET
			setvard HUNT_LASTTARGET ¯NONE¯
			setvard NPCATK_TARGET unset
			callevent game_wander
		}
	}

	if ( HUNT_LASTTARGET equals ¯NONE¯ ) setvard IS_HUNTING 0

	if ( IS_HUNTING )
	{
		local L_GAME_TIME game.time
		setvard NPC_CANSEE_TARGET $cansee(HUNT_LASTTARGET) 
		if ( !CANT_TRACK ) 
		{
			if ( NPC_CANSEE_TARGET )
			{
				setvard NPC_LASTSEEN_POS $get(HUNT_LASTTARGET,origin)
				callevent npcatk_setmovedest HUNT_LASTTARGET MOVE_RANGE "hunt:saw_target"
			}
			if ( !NPC_CANSEE_TARGET ) callevent npcatk_setmovedest NPC_LASTSEEN_POS game.monster.moveprox "hunt:blind_move" 
		}
		if ( NPC_CANSEE_TARGET )
		{
			callevent npc_targetsighted HUNT_LASTTARGET	
			if NPC_MUST_SEE_TARGET
			if ( $get(HUNT_LASTTARGET,range) < ATTACK_HITRANGE ) callevent check_attack
		}
		if ( !NPC_MUST_SEE_TARGET )
		{
			if ( $get(HUNT_LASTTARGET,range) < ATTACK_HITRANGE )
			{
				callevent check_attack
			}
		}
		if ( $cansee(enemy) )
		{
			
			if ent_lastseen isnot HUNT_LASTTARGET
			if $get(ent_lastseen,isplayer)
			if $get(ent_lastseen,range) < $get(HUNT_LASTTARGET,range)
			callevent npcatk_target $get(ent_lastseen,id) "is_closer_enemy"
		}

		callevent npcatk_targetvalidate HUNT_LASTTARGET
		
	}

	
	if !IS_HUNTING
	if HUNT_AGRO
	if ( $cansee(NPC_MOVE_TARGET) )
	{ 
		
		
		
		callevent npcatk_targetvalidate $get(ent_lastseen,id) 
	
		if HUNT_LASTTARGET isnot ¯NONE¯
		callevent npc_targetsighted HUNT_LASTTARGET
	}
}

{ game_wander
	
	
	
	if !IS_HUNTING
	callevent npc_wander
}

{ game_reached_dest

	if ( CHICKEN_RUN ) callevent npcatk_setmovedest $relpos(0,50,0) 0 "chicken_run_reachdest"
}

   
{ check_attack

   if CAN_ATTACK
   if !IS_FLEEING
	if !SUSPEND_AI

	

	
	local TARG_POS $get(HUNT_LASTTARGET,origin)
	local MY_Z $vec.z(game.monster.origin)
	local TARG_Z $vec.z(TARG_POS)
	local Z_DIFF TARG_Z
	add MY_Z NPC_TARG_HALFHEIGHT
	subtract Z_DIFF MY_Z
	if ( Z_DIFF < 0 ) local Z_DIFF $neg(Z_DIFF)
	local FINAL_ATTACK_RANGE ATTACK_RANGE
	if ( Z_DIFF > NPC_TARG_HALFHEIGHT ) 
	{
		
		
		local FINAL_ATTACK_RANGE ATTACK_HITRANGE
		
	}

	
	

	

	if $cansee(HUNT_LASTTARGET,FINAL_ATTACK_RANGE)

   callevent npcatk_attackenemy
}

{ npcatk_attackenemy

	if !NPC_NO_ATTACK

   callevent npc_selectattack		

	callevent npcatk_faceenemy
   playanim once ANIM_ATTACK

    callevent npc_attack
}

{ npcatk_go_agro
	if !CANT_TRACK
	setvard HUNT_AGRO 1
	setvard NPC_MOVE_TARGET $get(ent_laststruck,id)
	if ( !$get(HUNT_LASTTARGET,isalive) ) callevent npcatk_target NPC_MOVE_TARGET
}

{ game_struck

	if ( !HUNT_AGRO )
	{
		callevent npcatk_go_agro $get(ent_laststruck,id)
	}

	if ( !$get(HUNT_LASTTARGET,isalive) ) callevent npcatk_target $get(ent_laststruck,id) "struck_while_idle"

	if ( $get(ent_laststruck,isplayer) )
	{
		
		if !CYCLED_UP
		callevent cycle_up "stuck_by_player"
	}

   if ( $get(ent_laststruck,relationship,ent_me) isnot ally ) callevent npcatk_retaliate $get(ent_laststruck,id)
   callevent npcatk_checkflee
   if ( PARAM1 > FLINCH_DMG_REQ ) callevent npcatk_checkflinch


   callevent npc_struck 
}

{ npcatk_retaliate

   if CAN_RETALIATE

	if ( !$get(HUNT_LASTTARGET,exists) )	
	{
		callevent npcatk_target $get(ent_laststruck,id) "retaliate"
		
	}

	if $get(ent_laststruck,id) isnot HUNT_LASTTARGET 
   
	local L_RETALITE_CHANCE RETALIATE_CHANCE
	if ( RETALIATE_CHANGETARGET_CHANCE isnot 'RETALIATE_CHANGETARGET_CHANCE' ) local L_RETALITE_CHANCE RETALIATE_CHANGETARGET_CHANCE 

	if $rand(1,100) < L_RETALITE_CHANCE
    	
   
   callevent npcatk_target $get(ent_laststruck,id) "retaliate"
}

   
   
{ npcatk_faceattacker 			

   	if !IS_FLEEING
	if !SUSPEND_AI

    if ( PARAM1 equals 'PARAM1' ) callevent npcatk_setmovedest HUNT_LASTTARGET 9999 "npcatk_faceattacker:undef"
	if ( PARAM1 isnot 'PARAM1' )
	{
		
		callevent npcatk_setmovedest $get(PARAM1,id) 9999 "npcatk_faceattacker:p1"
	}

   	
}


   
   
{ npcatk_checkflee

   	if CAN_FLEE equals 1
   	if game.monster.hp <= FLEE_HEALTH
   	if $rand(0,100) < FLEE_CHANCE

	callevent npcatk_flee $get(ent_laststruck,id) FLEE_DISTANCE 3.0
}
{ npcatk_stopflee

	setvard IS_FLEEING 0
	
	if ( NPCATK_FLEE_RESTORETARGET ) callevent npcatk_target HUNT_LASTTARGET
	callevent npc_stopflee
}

{ npcatk_flee		

	if $get(PARAM1,id) isnot $get(ent_me,id) 

	

	playanim break
	setmovedest PARAM1 PARAM2 flee
	setmoveanim ANIM_RUN

	setvard IS_FLEEING 1
	setvard NPCATK_FLEE_RESTORETARGET IS_HUNTING

	
	local FLEE_TIME PARAM3
	if ( FLEE_TIME equals 'PARAM3' )
	{
		
		local FLEE_TIME 5.0
	}
	if ( FLEE_TIME > 10.0 )
	{
		
		local PARAM3 10.0
	}

   	callevent FLEE_TIME npcatk_stopflee
}

  
  
{ game_heardsound	

   	if CAN_HEAR
	if !NPC_HEARDSOUND_OVERRIDE
	
	if !SUSPEND_AI 
   	if !IS_FLEEING


	local I_HEARD $get(ent_lastheard,id) 

	

   	if ( PARAM1 equals 'danger' )
	{
		
		local DANGER_RADIUS PARAM3
		if $get(I_HEARD,range) < DANGER_RADIUS
		setvard I_WILL_FLEE 1
		callevent npcatk_check_if_scared_of I_HEARD 
		if ( I_WILL_FLEE ) callevent npcatk_flee I_HEARD DANGER_RADIUS 3.0
	}

	if ( PARAM1 isnot 'danger' )
	{
		if !IS_HUNTING
		if $get(I_HEARD,relationship,ent_me) equals enemy
		if $get(I_HEARD,range) < HEAR_RANGE_MAX
		if !$get(I_HEARD,scriptvar,PLAYING_DEAD)
		if !NPC_IGNORE_PLAYERS
		callevent npc_heardenemy 
		if ( $get(I_HEARD,isplayer) )
		{
			if $get(I_HEARD,range) < HEAR_RANGE_PLAYER
			if !CYCLED_UP
			callevent cycle_up "heard_player"
			if !HEARD_PLAYER
			setvard HEARD_PLAYER 1
			callevent 5.0 heard_cycle_down
		}
   		
		if game.monster.race isnot hguard
		local SEE_HEARD $cansee(I_HEARD)
		if ( SEE_HEARD )
		{
			callevent npcatk_target $get(ent_lastseen,id) "spotted_heard"
		}
		
		if ( !SEE_HEARD )
		{
			
			if game.monster.race isnot hguard
			callevent npcatk_setmovedest I_HEARD game.monster.moveprox "heard_enemy"
		}
	}
}

  
{
   eventname npcatk_checkflinch

	if !SUSPEND_AI 

   if CAN_FLINCH
   if !NPC_DELAYING_FLINCH
   if $rand(0,99) < FLINCH_CHANCE

	if ( FLINCH_ANIM isnot 'FLINCH_ANIM' ) playanim critical FLINCH_ANIM

   setvard NPC_DELAYING_FLINCH 0
   callevent FLINCH_DELAY npcatk_resetflinch
   callevent npc_flinch
}
{
   eventname npcatk_resetflinch
   setvard NPC_DELAYING_FLINCH 1
}

{ npcatk_vanish 

	setvard NPC_VANISHED_AT game.monster.origin
	setorigin ent_me (20000,20000,20000)

	if ( NPC_VANISH_RETURN_TIME equals 'NPC_VANISH_RETURN_TIME' ) setvard NPC_VANISH_RETURN_TIME PARAM1
	
	callevent NPC_VANISH_RETURN_TIME npcatk_vanish_return
}

{ npcatk_vanish_return

	
	setorigin ent_me NPC_VANISHED_AT
	setvard NPC_STUCK_TELEPORT 0
}

{ npcatk_targetvalidate 

	
	local OLD_HUNT_LASTTARGET HUNT_LASTTARGET

	setvard NPC_TARGET_INVALID 0

	if ( HUNT_LASTTARGET equals ¯NONE¯ )
	{
		setvard HUNT_LASTTARGET PARAM1
		setvard NPCATK_TARGET HUNT_LASTTARGET
	}

	if ( $get(PARAM1,relationship,ent_me) equals ally )
	{
		
		callevent npcatk_clear_targets "validate:targ_is_ally"
	}

	if ( $get(HUNT_LASTTARGET,scriptvar,PLAYING_DEAD) )
	{
		
		setvard NPC_TARGET_INVALID 1
		
	}

	if ( !CYCLED_UP ) 
	{
		if $get(HUNT_LASTTARGET,isplayer)
		callevent cycle_up "spotted_player"
	}

	if ( $get(NPCATK_TARGET,relationship,ent_me) equals ally )
	{
		
		setvard HUNT_LASTTARGET ¯NONE¯
		setvard NPCATK_TARGET unset
		setvard NPC_TARGET_INVALID 1
	}

	if ( $get(PARAM1,isplayer) )
	{
		if NPC_IGNORE_PLAYERS
		setvard NPC_TARGET_INVALID 1
	}

	callevent npc_targetvalidate $get(PARAM1,id)

	if ( NPC_TARGET_INVALID )
	{
		if ( PARAM1 isnot OLD_HUNT_LASTTARGET )
		{
			
			setvard HUNT_LASTTARGET OLD_HUNT_LASTTARGET
			setvard NPCATK_TARGET HUNT_LASTTARGET
		}
		if ( HUNT_LASTTARGET equals PARAM1 )
		{
			callevent npcatk_clear_targets
			setvard HUNT_LASTTARGET ¯NONE¯
			setvard NPCATK_TARGET unset
		}
	}
	if !NPC_TARGET_INVALID

	if HUNT_LASTTARGET isnot ¯NONE¯

	setvard NPC_LASTSEEN_POS $get(HUNT_LASTTARGET,origin)

	callevent npc_targetsighted HUNT_LASTTARGET 

	if !IS_HUNTING

	setvard ENTITY_ENEMY HUNT_LASTTARGET
	setvard NPCATK_TARGET HUNT_LASTTARGET 

	
	if ( $get(PARAM1,isplayer) )
	{
		setvard HUNTING_PLAYER 1
		callevent check_attack
		
		if ( !CYCLED_UP ) callevent cycle_up "spotted_player_redund"
	}

	
	if ( game.monster.race equals hguard ) setvard CYCLE_TIME CYCLE_TIME_BATTLE

	setmoveanim ANIM_RUN
	setvard IS_HUNTING 1
	setvard NPC_TARG_HALFHEIGHT $get(HUNT_LASTTARGET,height)
	divide NPC_TARG_HALFHEIGHT 2
	capvar NPC_TARG_HALFHEIGHT 37 2000
	
	
}

{ my_target_died

	
	setvard OUT_OF_RANGE 0
	callevent npcatk_clear_targets "target_dead"
	setmoveanim ANIM_WALK
	
	callevent 2.0 game_wander
}

{ npcatk_clear_targets 
	
	setvard NPC_MOVE_TARGET ORIG_NPC_MOVE_TARGET
	setvard HUNT_AGRO ORIG_HUNT_AGRO
	setvard HUNTING_PLAYER 0
	setvard IS_HUNTING 0
	setvard HUNT_LASTTARGET ¯NONE¯
	setvard NPCATK_TARGET unset
	callevent cycle_down "clear_targets"
}

{ super_lure 

	
	local TARG_RACE game.monster.race
	if ( PARAM2 isnot 'PARAM2' ) local TARG_RACE PARAM2

	if game.monster.race equals TARG_RACE
	if HUNT_LASTTARGET equals ¯NONE¯
	if !IS_HUNTING
	
	callevent npcatk_target PARAM1 "super_lure"
}

{ npcatk_target	


	
	
	local OLD_TARGET HUNT_LASTTARGET
	setvard HUNT_LASTTARGET $get(PARAM1,id) 
	setvard NPCATK_TARGET HUNT_LASTTARGET
	callevent npcatk_targetvalidate HUNT_LASTTARGET
	if ( !$get(HUNT_LASTTARGET,isalive) )
	{
		
		if $get(PARAM1,id) isnot OLD_TARGET
		if $get(OLD_TARGET,isalive)
		setvard HUNT_LASTTARGET OLD_TARGET
		setvard NPCATK_TARGET HUNT_LASTTARGET
	}

	if $get(HUNT_LASTTARGET,isalive)
	if ( !HUNT_AGRO ) callevent npcatk_go_agro

}

{ chicken_run 

	

	
	if !PLAYING_DEAD
	if !CANT_FLEE
	if !IS_FLEEING
	setvard IS_FLEEING 1
	setvard CHICKEN_RUN 1
	setvard PURE_FLEE 1
	setvard NPCATK_FLEE_RESTORETARGET IS_HUNTING

	setmoveanim ANIM_RUN
	setactionanim ANIM_RUN
	setidleanim ANIM_RUN

	setvard FLEE_DIR $rand(1,359)

	setvard CKN_TIME_END PARAM1

	setvard CKN_STUCK_COUNTER 0

	callevent npcatk_clearmovedest "chicken_run:prep"
	callevent 0.1 init_chicken_run
}

{ npcatk_chicken_run 

	callevent chicken_run PARAM1 PARAM2
}

{ npcatk_chickenrun 

	callevent chicken_run PARAM1 PARAM2
}

{ init_chicken_run

	

	callevent npcatk_setmovedest $relpos($vec(0,FLEE_DIR,0),$vec(0,500,0)) 0 "init_chicken_run"

	setvard CKN_MY_OLD_POS $get(ent_me,origin)

	callevent 0.5 chicken_run_stuckcheck

	

	callevent CKN_TIME_END chicken_run_end "time_up"
}

{ chicken_run_stuckcheck

	if CHICKEN_RUN

	local CKN_MY_POS $get(ent_me,origin)
	local CKN_MOVE_DIST $dist(CKN_MY_POS,CKN_MY_OLD_POS)

	

	if ( CKN_MOVE_DIST == 0 )
	{
		setmoveanim ANIM_RUN
		
		setvard FLEE_DIR $rand(1,359)
		callevent npcatk_clearmovedest "chicken_run_stuckcheck"
		
		local RUN_DIR $relpos($vec(0,FLEE_DIR,0),$vec(0,500,0))
		callevent npcatk_setmovedest RUN_DIR 0 "chicken_run_stuckcheck"
		
		playanim once ANIM_RUN
		add CKN_STUCK_COUNTER 1
	}
	setvard CKN_MY_OLD_POS CKN_MY_POS

	if ( CKN_MOVE_DIST > 0 ) setvard CKN_STUCK_COUNTER 0
	if ( CKN_STUCK_COUNTER > 4 ) callevent chicken_run_end "stuck_too_long"

	callevent 0.25 chicken_run_stuckcheck
}

{ chicken_run_end

	if CHICKEN_RUN
	

	setmoveanim ANIM_RUN
	setvard CHICKEN_RUN 0
	setvard IS_FLEEING 0
	setvard PURE_FLEE 0
	
	if ( NPCATK_FLEE_RESTORETARGET ) callevent npcatk_faceattacker HUNT_LASTTARGET
}

{ npcatk_suspend_ai
	if !SUSPEND_AI
	setvard SUSPEND_AI 1
	callevent PARAM1 npcatk_resume_ai
}

{ npcatk_resume_ai
	if SUSPEND_AI
	setvard SUSPEND_AI 0
}

{ npcatk_adj_attack

	

	
	
	
	
	
	
	
    
	
	
	if ( EXT_DAMAGE_ADJUSTMENT isnot 'EXT_DAMAGE_ADJUSTMENT' ) add FINAL_ATTACK_DAMAGE EXT_DAMAGE_ADJUSTMENT
	if ( EXT_HITCHANCE_ADJUSTMENT isnot 'EXT_HITCHANCE_ADJUSTMENT' ) add FINAL_HITCHANCE_DAMAGE EXT_HITCHANCE_ADJUSTMENT
}

{ npcatk_settarget 

	
	local OUT_PAR1 PARAM1
	local OUT_PAR2 PARAM2
	callevent npcatk_target OUT_PAR1 "compatibility" OUT_PAR2
}

{ cycle_up 
	setvard CYCLED_UP 1
	if ( !IS_HUNTING )
	{
		
		
	
		if !NO_STEP_ADJ
		callevent adj_step_size
	}

	setvard CYCLE_TIME CYCLE_TIME_BATTLE
	
}

{ cycle_down 

	
	setvard NPC_ALERTED_ALL 0 
	setvard CYCLED_UP 0
	setvard CYCLE_TIME CYCLE_TIME_IDLE
}

{ heard_cycle_down

	if !$cansee(enemy)
	if !HUNTING_PLAYER
	
	setvard HEARD_PLAYER 0
	callevent cycle_down "heard+never_found"
}



{ npcatk_clearmovedest
	
	setmovedest none
}

{ npcatk_setmovedest
	
	setmovedest PARAM1 PARAM2
}

{ npcatk_check_sets
	

	
	

	if ( NPC_MUST_SEE_TARGET equals 'NPC_MUST_SEE_TARGET' ) setvard NPC_MUST_SEE_TARGET 1

	if ( HUNT_AGRO equals 'HUNT_AGRO' ) setvard HUNT_AGRO 1
	setvard ORIG_HUNT_AGRO HUNT_AGRO

	

	if ( CANT_TRACK equals 'CANT_TRACK' ) setvard CANT_TRACK 0

	if ( CAN_HUNT equals 'CAN_HUNT' ) setvard CAN_HUNT 1

	if ( CAN_ATTACK equals 'CAN_ATTACK' ) setvard CAN_ATTACK 1

	if ( CAN_HEAR equals 'CAN_HEAR' ) setvard CAN_HEAR 1

	if ( CAN_FLEE equals 'CAN_FLEE' ) setvard CAN_FLEE 1

	if ( CAN_RETALIATE equals 'CAN_RETALIATE' ) setvard CAN_RETALIATE 1

	if ( CAN_FLINCH equals 'CAN_FLINCH' ) setvard CAN_FLINCH 0

	if ( RETALIATE_CHANCE equals 'RETALIATE_CHANCE' ) setvard RETALIATE_CHANCE 75

	if ( NPC_HEAR_TARGET equals 'NPC_HEAR_TARGET' ) setvard NPC_HEAR_TARGET enemy

	if ( FLEE_DISTANCE equals 'FLEE_DISTANCE' ) setvard FLEE_DISTANCE 1024

	if ( RETALIATE_CHANGETARGET_CHANCE isnot 'RETALIATE_CHANGETARGET_CHANCE' )
	{
		setvard RETALIATE_CHANCE RETALIATE_CHANGETARGET_CHANCE
	}

	if ( MY_ENEMY isnot 'MY_ENEMY' )
	{
		
		setvard NPC_MOVE_TARGET MY_ENEMY
	}

	if ( NPC_MOVE_TARGET equals 'NPC_MOVE_TARGET' )
	{
		if HUNT_AGRO
		setvard NPC_MOVE_TARGET enemy
	}
	setvard ORIG_NPC_MOVE_TARGET NPC_MOVE_TARGET

	if ( !HUNT_AGRO )
	{
		if ( NPC_MOVE_TARGET equals 'NPC_MOVE_TARGET' ) setvard NPC_MOVE_TARGET none
	}

	
	if ( FLINCH_DMG_REQ equals 'FLINCH_DMG_REQ' )
	{
		setvard FLINCH_DMG_REQ game.monster.maxhp
		multiply FLINCH_DMG_REQ 0.1
	}

	if ( HEAR_RANGE_MAX equals 'HEAR_RANGE_MAX' ) setvard HEAR_RANGE_MAX 1024

	if ( HEAR_RANGE_PLAYER equals 'HEAR_RANGE_PLAYER' ) setvard HEAR_RANGE_PLAYER 800
	if ( CHASE_RANGE equals 'CHASE_RANGE' ) setvard CHASE_RANGE 4000

	if ( FLINCH_DELAY equals 'FLINCH_DELAY' ) setvard FLINCH_DELAY 5.0

	
	
	if ( MOVE_RANGE equals 'MOVE_RANGE' )
	{
		
		setvard MOVE_RANGE game.monster.moveprox
	}

	if ( ATTACK_RANGE equals 'ATTACK_RANGE' )
	{
		
		setvard ATTACK_RANGE game.monster.moveprox
		multiply ATTACK_RANGE 2.5
	}

	
	
	setvard M_ATTACK_HITRANGE game.monster.height
	add M_ATTACK_HITRANGE 10
	add M_ATTACK_HITRANGE 38

	if ( ATTACK_HITRANGE equals 'ATTACK_HITRANGE' )
	{
		
		setvard ATTACK_HITRANGE M_ATTACK_HITRANGE
	}

	if ( ATTACK_HITRANGE < M_ATTACK_HITRANGE )
	{
		
		setvard ATTACK_HITRANGE M_ATTACK_HITRANGE
	}
}
