
{






	const BWEAPON_DBL_CHARGE_ADJ 2.0

	const ATK1_TYPE strike-land 
	const ATK1_KEYS +attack1
	const ATK1_RANGE 90 
	const ATK1_DMG 120 
	const ATK1_DMG_RANGE 10 
	const ATK1_DMG_TYPE blunt 
	const ATK1_STAMINA 1 
	const ATK1_SKILL polearms 
	const ATK1_ACCURACY 85% 
	const ATK1_DELAY_STRIKE 0.6 
	const ATK1_DURATION 1.1 
	const ATK1_OFS 0 
	const ATK1_ANG 0 
	const ATK1_CALLBACK atk1 
	const ATK1_NOISE 650 
	const ATK1_SKILL_LEVEL BASE_LEVEL_REQ 
	const ATK1_MPDRAIN 0 
	const ATK1_DMG_MULTI 0 
	const ATK1_NO_AUTOAIM 0 
	const ATK1_PANIM pole_swing 
	const ATK1_VANIM 4 
	const SOUND_ATK1 weapons/cbar_miss1.wav 
	const PITCH_ATK1 100 

	const ATK1_IS_PROJECTILE 0 
	const ATK1_PROJECTILE arrow 
	const ATK1_AMMODRAIN 1 
	const ATK1_COF 0 

	
	const ATK2_TYPE ATK1_TYPE
	const ATK2_KEYS -attack1 
	const ATK2_RANGE ATK1_RANGE
	const ATK2_DMG ATK1_DMG
	const ATK2_DMG_RANGE ATK1_DMG_RANGE
	const ATK2_DMG_TYPE AT1_DMG_TYPE
	const ATK2_STAMINA ATK1_STAMINA
	const ATK2_SKILL ATK1_SKILL
	const ATK2_ACCURACY ATK1_ACCURACY
	const ATK2_DELAY_STRIKE ATK1_DELAY_STRIKE
	const ATK2_DURATION ATK1_DURATION
	const ATK2_OFS 0 ATK1_OFS
	const ATK2_ANG 0 ATK1_ANG
	const ATK2_CALLBACK atk2
	const ATK2_NOISE ATK1_NOISE
	const ATK2_SKILL_LEVEL BASE_LEVEL_REQ
	const ATK2_ADD_SKILL_REQ 2
	const ATK2_MPDRAIN 0
	const ATK2_DMG_MULTI 2
	const ATK2_NO_AUTOAIM 0
	const ATK2_PANIM pole_swing 
	const ATK2_VANIM 5 
	const ATK2_IS_PROJECTILE 0
	const ATK2_PROJECTILE arrow
	const ATK2_AMMODRAIN 1
	const ATK2_COF 0
	const SOUND_ATK2 zombie/claw_miss2.wav
	const PITCH_ATK2 100

	const SOUND_HITWALL1 weapons/bullet_hit1.wav
	const SOUND_HITWALL2 weapons/bullet_hit2.wav
}

#include items/base_hide_stuff
#include items/base_item_extras

{ game_spawn
	name  BWEAPON_NAME
	desc  BWEAPON_DESC
	weight  BWEAPON_WEIGHT
	size  1 
	value BWEAPON_VALUE
	sethudsprite trade BWEAPON_INV_SPRITE_IDX

	setmodel PMODEL_FILE
	setworldmodel PMODEL_FILE
	sethand BWEAPON_HANDS

	callevent bitem_register_attacks
}

{ game_deploy

	callevent bitem_draw

	if game.serverside
	setvard GAME_PVP game.pvp
	callevent bitem_check_skill
	callevent 0.01 bitem_setup_model
}

{ game_show

	callevent bweapon_show
}

{ bweapon_show
	setviewmodel VMODEL_FILE
	
	setmodel PMODEL_FILE
	if ( game.item.hand_index == 0 )
	{
		setmodelbody 0 PMODEL_IDX_HAND_LEFT
	}
	else
	{
		setmodelbody 0 PMODEL_IDX_HAND_RIGHT
	}
}

{ game_switchhands
	if !BWEAPON_CUSTOM_SWITCHHANDS
	playviewanim VANIM_IDLE
}

{ game_pickup
	callevent bitem_draw
}

{ game_fall
 	setmodelbody 0 PMODEL_IDX_FLOOR
	playanim WANIM_FLOOR
}

{ game_drop
	local RL_HAND game.item.hand_index
	callexternal ent_owner ext_set_hand_id RL_HAND 0
}

{ bitem_draw
	if !BWEAPON_CUSTOM_DRAW
	playviewanim break
	playanim break

{ bitem_draw
	playviewanim break
	playanim break

	callevent bweapon_show

	setanimext PANIM_EXT

	if game.clientside
	playviewanim VANIM_DRAW
	playanim WANIM_HAND
	
}

{ bitem_setup_model
	setviewmodelprop ent_me submodel $get(ent_owner,scriptvar,'PLR_HAND_SET') VMODEL_IDX
}

{ bitem_register_attacks

	
	
	
	

	if ( !BITEM_CUSTOM_ATK1_REGISTER )
	{
		local reg.attack.priority 0
		local reg.attack.type ATK1_TYPE
		local reg.attack.keys ATK1_KEYS
		local reg.attack.range ATK1_RANGE
		local reg.attack.dmg ATK1_DMG
		local reg.attack.dmg.range ATK1_DMG_RANGE
		local reg.attack.dmg.type ATK1_DMG_TYPE
		local reg.attack.energydrain ATK1_STAMINA
		local reg.attack.stat ATK1_SKILL
		local reg.attack.hitchance ATK1_ACCURACY
		local reg.attack.delay.strike ATK1_DELAY_STRIKE
		local reg.attack.delay.end ATK1_DURATION
		local reg.attack.ofs.startpos ATK1_OFS
		local reg.attack.ofs.aimang ATK1_ANG
		local reg.attack.callback ATK1_CALLBACK
		local reg.attack.noise ATK1_NOISE
		local reg.attack.mpdrain ATK1_MPDRAIN
		local reg.attack.dmg.multi ATK1_DMG_MULTI
		local reg.attack.noautoaim ATK1_NO_AUTOAIM
		local reg.attack.reqskill ATK1_SKILL_LEVEL

		setvard WEAPON_PRIMARY_SKILL reg.attack.stat

		if ( ATK1_IS_PROJECTILE )
		{
			local reg.attack.ammodrain ATK1_AMMODRAIN
			local reg.attack.projectile ATK1_PROJECTILE
			local reg.attack.COF ATK1_COF
		}

		registerattack
	}

	if ( !BITEM_CUSTOM_ATK2_REGISTER )
	{
		local reg.attack.priority 1
		local reg.attack.chargeamt	100%
		local reg.attack.type ATK2_TYPE
		local reg.attack.keys ATK2_KEYS
		local reg.attack.range ATK2_RANGE
		local reg.attack.dmg ATK2_DMG
		local reg.attack.dmg.range ATK2_DMG_RANGE
		local reg.attack.dmg.type ATK2_DMG_TYPE
		local reg.attack.energydrain ATK2_STAMINA
		local reg.attack.stat ATK2_SKILL
		local reg.attack.hitchance ATK2_ACCURACY
		local reg.attack.delay.strike ATK2_DELAY_STRIKE
		local reg.attack.delay.end ATK2_DURATION
		local reg.attack.ofs.startpos ATK2_OFS
		local reg.attack.ofs.aimang ATK2_ANG
		local reg.attack.callback ATK2_CALLBACK
		local reg.attack.noise ATK2_NOISE
		local reg.attack.mpdrain ATK2_MPDRAIN
		local reg.attack.dmg.multi ATK2_DMG_MULTI
	
		if ( ATK2_DMG_MULTI != 0 ) multiply reg.attack.dmg ATK2_DMG_MULTI
		local reg.attack.noautoaim ATK2_NO_AUTOAIM
		local reg.attack.reqskill ATK2_SKILL_LEVEL
		add reg.attack.reqskill ATK2_ADD_SKILL_REQ

		if ( ATK2_IS_PROJECTILE )
		{
			local reg.attack.ammodrain ATK2_AMMODRAIN
			local reg.attack.projectile ATK2_PROJECTILE
			local reg.attack.COF ATK2_COF
		}

		registerattack
	}

	
}

{ game_attack_cancel
	playowneranim once PANIM_IDLE global.anim.combatwalk 3
}

{ game_hitworld
	
	if !BWEAPON_CUSTOM_HITWALL
	playrandomsound 2 10 SOUND_HITWALL1 SOUND_HITWALL2
}

{ atk1_start
	if !BITEM_CUSTOM_ATK1_EVENT
	playviewanim ATK1_VANIM
	playowneranim critical ATK1_PANIM global.anim.combatwalk 3
	playsound 1 10 SOUND_ATK1 0.8 PITCH_ATK1
}

{ atk2_start
	if !BITEM_CUSTOM_ATK2_EVENT
	playviewanim ATK2_VANIM
	playowneranim critical ATK2_PANIM global.anim.combatwalk 3
	playsound 1 10 SOUND_ATK2 0.8 PITCH_ATK2
}

{ bitem_check_skill
	if $get(ent_owner,scriptvar,'PLR_IN_WORLD')

	local FIND_MELEE_STAT "skill."
	stradd FIND_MELEE_STAT ATK1_SKILL

	local L_OWNER_SKILL $get(ent_owner,FIND_MELEE_STAT)



	if ( L_OWNER_SKILL < BASE_LEVEL_REQ )
	{
		dplayermessage ent_owner You lack the skill to properly wield this weapon!
		local OUT_STR "You lack the proficiency to wield this weapon properly. ( requires: "
		stradd OUT_STR ATK1_SKILL
		stradd OUT_STR " proficiency "
		stradd OUT_STR BASE_LEVEL_REQ
		stradd OUT_STR " )"
		infomsg ent_owner "Insufficient Skill" OUT_STR
		setvard BITEM_UNDERSKILLED 1
		setvard BITEM_WAS_UNDERSKILLED 1
		attackprop ent_me 0 dmg.multi 0.1
	}
	else
	{
		setvard BITEM_UNDERSKILLED 0
		if BITEM_WAS_UNDERSKILLED
		attackprop ent_me 0 dmg.multi 1.0
		setvard BITEM_WAS_UNDERSKILLED 0
	}
}

{ game_setchargepercent
	
	setvard BWEAPON_CHARGE_PERCENT PARAM1
}

{ atk1_damaged_other
	if ( BWEAPON_CHARGE_PERCENT > 0.25 )
	{
		subtract BWEAPON_CHARGE_PERCENT 0.25

		local L_CHARGE_RATIO $ratio(BWEAPON_CHARGE_PERCENT,1.25,BWEAPON_DBL_CHARGE_ADJ)

		local NEW_DMG PARAM2
		multiply NEW_DMG L_CHARGE_RATIO
		setdmg dmg NEW_DMG
		returndata L_CHARGE_RATIO
	
		setvard BWEAPON_CHARGE_PERCENT 0

		local CUR_DRAIN MELEE_ENERGY
		multiply CUR_DRAIN BWEAPON_CHARGE_PERCENT
		drainstamina ent_owner CUR_DRAIN
	}
}


