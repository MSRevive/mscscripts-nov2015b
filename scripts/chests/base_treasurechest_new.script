#scope server
//THIS SCRIPT IS NEVER ACTUALLY USED
//- was a prototype for base_treasurechest_array


//Replacement for items/base_treasurechest
//- This new system creates a seperate inventory for each player
//- This is explained to the player when the chest is looked upon (if there are multiple players)

//- For now, this is using the black chest model to distinguish it from normal chests
//- But I would hope, in the future, that all chests would be replaced/rebuilt with this base

//- DO NOT DEFINE STORENAME WITH THIS TYPE OF CHEST (it does that internally to prevent conflicts)

//Useful info for stalking chests in { chest_additems
//callevent add_noob_item //[%chance] - random n00b item
//callevent add_good_item //[%chance] [hp_req] - random good item, if player qualifies [def 100+hp]
//callevent add_great_item //[%chance] [hp_req] - random great item, if player qualifies [def 400+hp]
//callevent add_epic_item //[%chance] [hp_req] - random epic item, if player qualifies [def 600+hp]
//callevent add_gold_by_hp //[max_gold:5|10|25|50|100|200|500] - add gold based on player hp, but no more than max_gold - you cannot use the old "gold xxx" property on this type of chest, but you can use this event multiple times

//callevent add_noob_arrows //[amt] - Amount must be divisible by 15!
//callevent add_good_arrows //[amt] - Amount must be divisible by 15!
//callevent add_great_arrows //[amt] - Amount must be divisible by 15!
//callevent add_epic_arrows //[amt] - Amount must be divisible by 15!

//callevent add_artifact //[%chance] adds a single artifact from the BC_ARTIFACTS token string (see example: chests/lodagond4_new

//callevent find_strongest_player //stores player with most dmg points in BC_STRONGEST_PLAYER - returning next strongest with each additional call
//- BC_STRONGEST_PLAYER returns 'out' when player list is exhausted

//CHEST_USER - current player viewing the chest inventory (also TC_CHEST_USER, for compatability)
//game.playersnb - players present (sans bots)
//TC_NPLAYERS_X5 - players time 5 (for ease of increasing odds of stuff spawning with more players present)
//TC_NPLAYERS_X10 - players time 10 (for ease of increasing odds of stuff spawning with more players present)

//default extra treasure
//const NO_ORE 1 - set this if you want the chest not to check for loreldian ore
//const NO_BOLTS 1 - set this if you want the chest not to check for random bolts
//const NO_POTS 1 - set this if you want the chest not to check for pots (normally 1 mana and 1 healing per inventory)

//special events
//callevent offer_felewyn_symbol //<%chance> - this chest may have a felewyn symbol if player meets criteria

//security
//const MAP_VERIFY <mapname> - spawn only on this map
//const GM_VERIFY <level> - spawn only if GM_MAP_VERIFY var on game_master is this level or higher (you can use this to confirm death of a boss)
//const FIXED_POSITION (x,y,z) - spawn only at this position

{ [shared]
	const ANIM_IDLE idle
	const ANIM_CLOSE close
	const ANIM_OPEN open
}

{ [shared] game_spawn

	name a|Treasure Chest
	hp 1
	invincible  2
	width 20
	height 30
	setmodel misc/treasure.mdl
	setmodelbody 0 1 //using black treasure model
	setidleanim	ANIM_IDLE

	gravity 0.1 //float down to ground

	setvard PLAYING_DEAD 1

	nopush 1

	if game.serverside

	setvard STORENAME_PREFIX $randf(-10000.00,10000.00) //this is the float limit in MSC scripts, so there is a 1 in 2 million chance that storenames may match up and cause issues (good enough for me)
	setvard BC_PLAYER_STORES '' //list of players I've generated stores for
	setvard BC_NPLAYER_STORES 0 //number of stores I generated (I wont make more than 10)
	setvard IMMUNE_PUSH 1

	callevent 0.01 verify_chest
}

{ verify_chest

	//security options
	if ( MAP_VERIFY isnot 'MAP_VERIFY' )
	{
		if !G_DEVELOPER_MODE
		if $lcase(game.map.name) isnot MAP_VERIFY
		deleteent ent_me
	}
	
	if ( GM_VERIFY isnot 'GM_VERIFY' )
	{
		//set this via callexternal game_master gm_verify_set X - when a boss dies, or such
		local GM_VERIFY_LEVEL $get(GAME_MASTER,scriptvar,'GM_MAP_VERIFY')
		if GM_VERIFY < GM_VERIFY_LEVEL
		deleteent ent_me
	}

	if ( FIXED_POSITION isnot 'FIXED_POSITION' )
	{
		setorigin ent_me FIXED_POSITION
	}
}

{ game_targeted_by_player

	if game.players > 1
	if ( TC_ALERTED_PLAYERS contains PARAM1 ) local EXIT_SUB 1
	if !EXIT_SUB
	token.add TC_ALERTED_PLAYERS PARAM1 //don't spam the player with this hint
	helptip	PARAM1 generic "TREASURE CHEST" "This chest displays a unique inventory to each player."
}

{ [server] game_playerused

	if $get(PARAM1,isalive)

	callexternal PARAM1 ext_remove_afk

	setvard CHEST_USER PARAM1
	setvard TC_CHEST_USER PARAM1

	setvard STORENAME STORENAME_PREFIX
	local PLAYER_ID $get(PARAM1,steamid)
	stradd STORENAME PLAYER_ID

	local MAKE_NEW_STORE 1
	if ( BC_PLAYER_STORES contains PLAYER_ID )
	{
		local MAKE_NEW_STORE 0
		callevent 0.1 bc_offer_goodies
	}
	else
	{
		if BC_SINGLE_STORE_ONLY
		rplayermessage CHEST_USER Sorry, this chest is empty.
	}


	if ( !BC_INITIATED )
	{
		setvard BC_INITIATED 1
		if game.players == 1
		//if there was only one player when I was first used, do not generate additional stores later (helps avoid looters)
		setvard BC_SINGLE_STORE_ONLY 1
	}
	else
	{
		if BC_SINGLE_STORE_ONLY
		local EXIT_SUB 1
	}
	if !EXIT_SUB

	if MAKE_NEW_STORE
	token.add BC_PLAYER_STORES PLAYER_ID
	if ( BC_PLAYER_STORES > 10 ) rplayermessage CHEST_USER Sorry, this chest is empty. //chest deals with 10 players max
	if BC_PLAYER_STORES <= 10
	createstore STORENAME

	//these vars are commonly used in chest_additems
	setvard TC_NPLAYERS 1
	setvard TC_NPLAYERS_X2 TC_NPLAYERS
	multiply TC_NPLAYERS_X2 2
	setvard TC_NPLAYERS_X5 TC_NPLAYERS
	multiply TC_NPLAYERS_X5 5
	setvard TC_NPLAYERS_X10 TC_NPLAYERS
	multiply TC_NPLAYERS_X10 10

	if LAST_STORE_ADDED isnot STORENAME //make absolutely sure you only add to each store once

	setvard LAST_STORE_ADDDED STORENAME

	callevent chest_additems
	callevent 0.1 bc_offer_goodies //delay gives a split second for store to propegate
}

{ [server] trade_success

	playrandomsound	2 10 Items/creak.wav
	playanim hold ANIM_OPEN

}
{ [server] trade_done

	playanim once ANIM_CLOSE
	setidleanim ANIM_IDLE
}

{ bc_offer_goodies
	if STORENAME contains $get(CHEST_USER,steamid)
	offerstore STORENAME CHEST_USER inv trade
}

{ chest_additems

	if $lcase(game.map.name) isnot edana //chests in edana have no extras

	dbg bolt_check
	if ( !NO_BOLTS )
	{
		if $rand(1,10) == 1
		if ( $rand(1,100) <= 75 ) addstoreitem STORENAME proj_bolt_wooden 25 0 0 25
		if ( $rand(1,100) <= TC_NPLAYERS_X10 ) addstoreitem STORENAME proj_bolt_iron 25 0 0 25
		//if ( $rand(1,100) <= TC_NPLAYERS_X5 ) addstoreitem STORENAME proj_bolt_silver 25 0 0 25
		if ( $item_exists(CHEST_USER,bows_crossbow_heavy33) )
		{
			if ( $rand(1,100) <= TC_NPLAYERS_X5 ) addstoreitem STORENAME proj_bolt_steel 25 0 0 25
		}
	}

	dbg ore_check
	if ( !NO_ORE )
	{
		if $item_exists(CHEST_USER,item_gaxe_handle)
		if !$item_exists(CHEST_USER,item_ore_lorel)
		if $rand(1,2000) <= TC_NPLAYERS_X10
		addstoreitem STORENAME item_ore_lorel 1 0		
	}

	dbg pot_check
	if ( !NO_POTS )
	{
		addstoreitem STORENAME mana_mpotion 1 0
		if ( $get(CHEST_USER,maxhp) < 100 ) addstoreitem STORENAME health_lpotion 1 0
		if ( $get(CHEST_USER,maxhp) >= 100 )
		{
			local POT_TYPE $rand(1,5)
			if ( POT_TYPE == 1 ) addstoreitem STORENAME health_lpotion 1 0
			if ( POT_TYPE == 2 ) addstoreitem STORENAME health_mpotion 1 0
			if ( POT_TYPE >= 3 ) addstoreitem STORENAME health_spotion 1 0
		}
	}

	//mapper defined item list
	if ( BC_MAPPER_ITEMS isnot 'BC_MAPPER_ITEMS' )
	{
		local N_MAPPER_ITEMS $get_token_amt(BC_MAPPER_ITEMS)
		calleventloop N_MAPPER_ITEMS bc_dish_out_mapper_items
	}
	
}

{ [server] offer_felewyn_symbol //PARAM1 = % chance

	//dbg fele_check
	if $rand(1,100) <= PARAM1

	if $get(CHEST_USER,maxhp) > 750
	if !$item_exists(CHEST_USER,item_s1)
	if !$item_exists(CHEST_USER,item_s2)
	if !$item_exists(CHEST_USER,item_s3)
	if !$item_exists(CHEST_USER,item_s4)
	if !$item_exists(CHEST_USER,item_s5)
	if !$item_exists(CHEST_USER,swords_fshard1)
	if !$item_exists(CHEST_USER,swords_fshard2)
	if !$item_exists(CHEST_USER,swords_fshard3)
	if !$item_exists(CHEST_USER,swords_fshard4)
	if !$item_exists(CHEST_USER,swords_fshard5)

	setvard ABORT_GIFT 0

	calleventloop 9 tc_felewyn_shard_check_banks

	if ( $get_quest_data(CHEST_USER,f) contains sym ) setvard ABORT_GIFT 1
	if ( $get_quest_data(CHEST_USER,f) contains sha ) setvard ABORT_GIFT 1

	if !ABORT_GIFT

	local RND_ITEM "item_s"
	stradd RND_ITEM $rand(1,5)
	addstoreitem STORENAME RND_ITEM 1 0	
}

{ [server] tc_felewyn_shard_check_banks
	local CUR_BANK game.script.iteration
	local CUR_BANK $int(CUR_BANK)
	local CUR_BANK_NAME bank
	stradd CUR_BANK_NAME CUR_BANK

	if ( $get_quest_data(CHEST_USER,CUR_BANK_NAME) contains item_s1 ) setvard ABORT_GIFT 1
	if ( $get_quest_data(CHEST_USER,CUR_BANK_NAME) contains item_s2 ) setvard ABORT_GIFT 1
	if ( $get_quest_data(CHEST_USER,CUR_BANK_NAME) contains item_s3 ) setvard ABORT_GIFT 1
	if ( $get_quest_data(CHEST_USER,CUR_BANK_NAME) contains item_s4 ) setvard ABORT_GIFT 1
	if ( $get_quest_data(CHEST_USER,CUR_BANK_NAME) contains item_s5 ) setvard ABORT_GIFT 1
	if ( $get_quest_data(CHEST_USER,CUR_BANK_NAME) contains swords_fshard ) setvard ABORT_GIFT 1

}

{ [server] add_noob_item //PARAM1 = chance% 

	if ( PARAM1 startswith 'PARAM' ) local PARAM1 100

	local ROLL 100
	local A_RAND $rand(1,100)
	subtract ROLL A_RAND
	dbg add_noob_item ROLL vs PARAM1
	if ROLL < PARAM1
	local RND_LIST $rand(1,G_NOOB_SETS)
	if ( RND_LIST == 1 ) local ITEM_LIST G_NOOB_ITEMS1
	if ( RND_LIST == 2 ) local ITEM_LIST G_NOOB_ITEMS2
	if ( RND_LIST == 3 ) local ITEM_LIST G_NOOB_ITEMS3
	if ( RND_LIST == 4 ) local ITEM_LIST G_NOOB_ITEMS4
	if ( RND_LIST == 5 ) local ITEM_LIST G_NOOB_ITEMS5
	if ( RND_LIST == 6 ) local ITEM_LIST G_NOOB_ITEMS6
	if ( RND_LIST == 7 ) local ITEM_LIST G_NOOB_ITEMS7
	if ( RND_LIST == 8 ) local ITEM_LIST G_NOOB_ITEMS8
	if ( RND_LIST == 9 ) local ITEM_LIST G_NOOB_ITEMS9
	local N_ITEMS $get_token_amt(ITEM_LIST)
	subtract N_ITEMS 1
	local R_ITEM $rand(0,N_ITEMS)
	local P_ITEM $get_token(ITEM_LIST,R_ITEM)
	dbg selected P_ITEM of ( RND_LIST ) ITEM_LIST
	addstoreitem STORENAME P_ITEM 1 0
}

{ [server] add_good_item  //PARAM1=chance% PARAM2=hpreq

	if $get(CHEST_USER,maxhp) > PARAM2

	if ( PARAM1 startswith 'PARAM' ) local PARAM1 100

	local ROLL 100
	local A_RAND $rand(1,100)
	subtract ROLL A_RAND
	dbg add_good_item ROLL vs PARAM1
	if ROLL < PARAM1
	local RND_LIST $rand(1,G_GOOD_SETS)
	if ( RND_LIST == 1 ) local ITEM_LIST G_GOOD_ITEMS1
	if ( RND_LIST == 2 ) local ITEM_LIST G_GOOD_ITEMS2
	if ( RND_LIST == 3 ) local ITEM_LIST G_GOOD_ITEMS3
	if ( RND_LIST == 4 ) local ITEM_LIST G_GOOD_ITEMS4
	if ( RND_LIST == 5 ) local ITEM_LIST G_GOOD_ITEMS5
	if ( RND_LIST == 6 ) local ITEM_LIST G_GOOD_ITEMS6
	if ( RND_LIST == 7 ) local ITEM_LIST G_GOOD_ITEMS7
	if ( RND_LIST == 8 ) local ITEM_LIST G_GOOD_ITEMS8
	if ( RND_LIST == 9 ) local ITEM_LIST G_GOOD_ITEMS9
	local N_ITEMS $get_token_amt(ITEM_LIST)
	subtract N_ITEMS 1
	local R_ITEM $rand(0,N_ITEMS)
	local P_ITEM $get_token(ITEM_LIST,R_ITEM)
	dbg selected P_ITEM of ( RND_LIST ) ITEM_LIST
	addstoreitem STORENAME P_ITEM 1 0
}

{ [server] add_great_item  //PARAM1=chance% PARAM2=hpreq

	if $get(CHEST_USER,maxhp) > PARAM2

	if ( PARAM1 startswith 'PARAM' ) local PARAM1 100

	local ROLL 100
	local A_RAND $rand(1,100)
	subtract ROLL A_RAND
	dbg add_great_item ROLL vs PARAM1
	if ROLL < PARAM1
	local RND_LIST $rand(1,G_GREAT_SETS)
	if ( RND_LIST == 1 ) local ITEM_LIST G_GREAT_ITEMS1
	if ( RND_LIST == 2 ) local ITEM_LIST G_GREAT_ITEMS2
	if ( RND_LIST == 3 ) local ITEM_LIST G_GREAT_ITEMS3
	if ( RND_LIST == 4 ) local ITEM_LIST G_GREAT_ITEMS4
	if ( RND_LIST == 5 ) local ITEM_LIST G_GREAT_ITEMS5
	if ( RND_LIST == 6 ) local ITEM_LIST G_GREAT_ITEMS6
	if ( RND_LIST == 7 ) local ITEM_LIST G_GREAT_ITEMS7
	if ( RND_LIST == 8 ) local ITEM_LIST G_GREAT_ITEMS8
	if ( RND_LIST == 9 ) local ITEM_LIST G_GREAT_ITEMS9
	local N_ITEMS $get_token_amt(ITEM_LIST)
	subtract N_ITEMS 1
	local R_ITEM $rand(0,N_ITEMS)
	local P_ITEM $get_token(ITEM_LIST,R_ITEM)
	dbg selected P_ITEM of ( RND_LIST ) ITEM_LIST
	addstoreitem STORENAME P_ITEM 1 0

}

{ [server] add_epic_item   //PARAM1=chance% PARAM2=hpreq

	if $get(CHEST_USER,maxhp) > PARAM2

	if ( PARAM1 startswith 'PARAM' ) local PARAM1 100

	local ROLL 100
	local A_RAND $rand(1,100)
	subtract ROLL A_RAND
	//dbg add_epic_item ROLL vs PARAM1
	if ROLL < PARAM1

	local N_EPICS $g_get_array_amt(G_ARRAY_EPIC)
	local RND_PICK $rand(0,N_EPICS)
	local RND_ITEM $g_get_array(G_ARRAY_EPIC,RND_PICK)
	dbg add_epic_item RND_PICK of N_EPICS
	addstoreitem STORENAME RND_ITEM 1 0
}

{ [server] add_gold_by_hp //[max_bag_size:5|10|25|50|100|200|500]

	dbg add_gold_by_hp PARAM1

	if ( $get(CHEST_USER,maxhp) < 10 ) local BAG_SIZE 5
	if ( $get(CHEST_USER,maxhp) >= 50 ) local BAG_SIZE 10
	if ( $get(CHEST_USER,maxhp) >= 100 ) local BAG_SIZE 25
	if ( $get(CHEST_USER,maxhp) >= 400 ) local BAG_SIZE 50
	if ( $get(CHEST_USER,maxhp) >= 600 ) local BAG_SIZE 100
	if ( $get(CHEST_USER,maxhp) >= 800 ) local BAG_SIZE 200
	if ( $get(CHEST_USER,maxhp) >= 1000 ) local BAG_SIZE 500

	if ( BAG_SIZE > PARAM1 ) local BAG_SIZE PARAM1

	if ( G_DEVELOPER_MODE ) messageall green add_gold_by_hp: Userhp $get(CHEST_USER,maxhp) - BAG_SIZE

	local ITEM_NAME gold_pouch_
	stradd ITEM_NAME BAG_SIZE
	addstoreitem STORENAME ITEM_NAME 1 0
}

{ add_artifact //[%chance] - select a random artifact from BC_ARTIFACTS token list

	dbg add_artifact PARAM1

	if ( PARAM1 startswith 'PARAM' ) local PARAM1 100
	local ROLL 100
	local A_RAND $rand(1,100)
	subtract ROLL A_RAND
	if ROLL < PARAM1

	local BC_NARTIFACTS $get_token_amt(BC_ARTIFACTS)
	subtract BC_NARTIFACTS 1
	local BC_RND_ARTIFACT_IDX $rand(0,BC_NARTIFACTS)
	local BC_RND_ARTIFACT $get_token(BC_ARTIFACTS,BC_RND_ARTIFACT_IDX)
	addstoreitem STORENAME BC_RND_ARTIFACT 1 0
}

//debugary
{ [server] bd_debug  //<print_var> <property_printvar> <extra> <extra> <caller_id>
	//saytextrange 2048
	//saytext var PARAM1 pvar $get(PARAM1,PARAM2) other: PARAM3
	//consolemsg PARAM5 $get(ent_me,name) reports: var PARAM1 pvar $get(PARAM1,PARAM2) other: PARAM3
	local PARAM_OUT1 PARAM1
	local PARAM_OUT2 PARAM2
	local PARAM_OUT3 PARAM3
	local PARAM_OUT4 PARAM4
	callexternal $get(PARAM1,id) ext_debug_que PARAM_OUT1 PARAM_OUT2 PARAM_OUT3 PARAM_OUT4
}


{ game_postspawn
	dbg dynchest-game_postspawn: PARAM4

	if ( PARAM4 equals set_chest_sprite_in )
	{
		callevent chest_sprite_in
	}
	if !EXIT_SUB

	if PARAM4 isnot none
	setvard BC_MAPPER_ITEMS PARAM4
}

{ bc_dish_out_mapper_items

	dbg bc_dish_out_mapper_items

	local CUR_ITEM game.script.iteration
	local MAPPER_ITEM $get_token(BC_MAPPER_ITEMS,CUR_ITEM)
	addstoreitem STORENAME MAPPER_ITEM 1 0
}

{ [server] add_noob_arrows //[amt] - Amount must be divisible by 15!

	local ARROW_LIST G_NOOB_ARROWS
	local BUNDLE_SIZE PARAM1
	if ( BUNDLE_SIZE startswith 'PARAM' ) local BUNDLE_SIZE 15

	local N_ARROW_NAMES $get_token_amt(ARROW_LIST)
	subtract N_ARROW_NAMES 1
	local ARROW_NAME $get_token(ARROW_LIST,$rand(0,N_ARROW_NAMES))
	addstoreitem STORENAME ARROW_NAME BUNDLE_SIZE 0 0 BUNDLE_SIZE

	dbg add_noob_arrows ARROW_NAME BUNDLE_SIZE
}

{ [server] add_good_arrows //[amt] - Amount must be divisible by 15!
	local ARROW_LIST G_GOOD_ARROWS
	local BUNDLE_SIZE PARAM1
	if ( BUNDLE_SIZE startswith 'PARAM' ) local BUNDLE_SIZE 15

	local N_ARROW_NAMES $get_token_amt(ARROW_LIST)
	subtract N_ARROW_NAMES 1
	local ARROW_NAME $get_token(ARROW_LIST,$rand(0,N_ARROW_NAMES))
	if ( ARROW_NAME contains proj_bolt ) local BUNDLE_SIZE 25
	addstoreitem STORENAME ARROW_NAME BUNDLE_SIZE 0 0 BUNDLE_SIZE

	dbg add_good_arrows ARROW_NAME BUNDLE_SIZE
}

{ [server] add_great_arrows //[amt] - Amount must be divisible by 15!
	local ARROW_LIST G_GREAT_ARROWS
	local BUNDLE_SIZE PARAM1
	if ( BUNDLE_SIZE startswith 'PARAM' ) local BUNDLE_SIZE 15

	local N_ARROW_NAMES $get_token_amt(ARROW_LIST)
	subtract N_ARROW_NAMES 1
	local ARROW_NAME $get_token(ARROW_LIST,$rand(0,N_ARROW_NAMES))
	if ( ARROW_NAME contains proj_bolt ) local BUNDLE_SIZE 25
	addstoreitem STORENAME ARROW_NAME BUNDLE_SIZE 0 0 BUNDLE_SIZE

	dbg add_great_arrows ARROW_NAME BUNDLE_SIZE
}

{ [server] add_epic_arrows //[amt] - Amount must be divisible by 15!
	local ARROW_LIST G_EPIC_ARROWS
	local BUNDLE_SIZE PARAM1
	if ( BUNDLE_SIZE startswith 'PARAM' ) local BUNDLE_SIZE 15

	local N_ARROW_NAMES $get_token_amt(ARROW_LIST)
	subtract N_ARROW_NAMES 1
	local ARROW_NAME $get_token(ARROW_LIST,$rand(0,N_ARROW_NAMES))
	if ( ARROW_NAME contains proj_bolt ) local BUNDLE_SIZE 25
	addstoreitem STORENAME ARROW_NAME BUNDLE_SIZE 0 0 BUNDLE_SIZE

	dbg add_epic_arrows ARROW_NAME BUNDLE_SIZE
}

{ find_strongest_player
	//returns player with most damage points, returning next strongest on each additional call
	//stores in BC_STRONGEST_PLAYER
	if game.players > 0
	if ( PLAYERSTR_LIST equals 'PLAYERSTR_LIST' ) getplayersnb PLAYERSTR_LIST
	if ( $len(PLAYERSTR_LIST) < 4 ) setvard BC_STRONGEST_PLAYER 'out' 
	calleventloop $get_token_amt(PLAYERSTR_LIST) find_strongest_player_sort
	setvard BC_STRONGEST_PLAYER $get_token(PLAYERSTR_LIST,STRONGEST_IDX)
	token.del PLAYERSTR_LIST STRONGEST_IDX
}

{ get_strongest_player_list
	//beware that this isn't compatible with find_strongest_player
	if game.players > 0
	getplayersnb PLAYERSTR_LIST
	setvard STRONGEST_LIST ''
	calleventloop $get_token_amt(PLAYERSTR_LIST) bcn_assemble_list
}

{ bcn_assemble_list
	calleventloop $get_token_amt(PLAYERSTR_LIST) find_strongest_player_sort
	local STRONGEST_PLAYER $get_token(PLAYERSTR_LIST,STRONGEST_IDX)
	token.add STRONGEST_LIST STRONGEST_PLAYER
	token.del PLAYERSTR_LIST STRONGEST_IDX
}

{ find_strongest_player_sort

	local CUR_IDX game.script.iteration
	local CUR_PLAYER $get_token(PLAYERSTR_LIST,CUR_IDX)
	local PLAYER_STAT $get(CUR_PLAYER,scriptvar,'PLR_TOTAL_DMG') //newfunc in player_main/game_master +1000 for heal/iceshield -1000 for death
	local PLAYER_SUB_STAT $get(CUR_PLAYER,scriptvar,'PLR_DMG') //fraction points
	multiply PLAYER_SUB_STAT 0.001 //note: this will drop fractions < 0.01
	add PLAYER_STAT PLAYER_SUB_STAT
	if ( G_DEVELOPER_MODE ) consolemsg DEV_PLAYER ARTY_DEBUG: reading PLAYER_STAT dmgpoints on $get(CUR_PLAYER,name)
	if ( PLAYER_STAT > STRONGEST_STAT_LEVEL )
	{
		setvard STRONGEST_STAT_LEVEL PLAYER_STAT
		setvard STRONGEST_IDX CUR_IDX
	}
}

{ chest_sprite_in
	//careful that c-tele1.spr is precached - it is not by default
	clientevent new all effects/sfx_sprite_in $get(ent_me,origin) c-tele1.spr 25 1.0
	playsound 0 10 amb/quest1.wav
}